2020-12-12 11:20:08,913 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:20:08,922 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:20:08,927 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:20:09,115 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\japar\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-12-12 11:20:09,117 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-12-12 11:20:09,118 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-12-12 11:20:11,870 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:20:12,127 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 243ms. Found 10 JPA repository interfaces.
2020-12-12 11:20:13,057 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:20:14,540 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:20:14,568 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:20:14,569 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:20:14,571 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:20:15,198 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:20:15,223 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:20:15,226 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 6108 ms
2020-12-12 11:20:15,483 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2020-12-12 11:20:15,913 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2020-12-12 11:20:15,931 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:20:16,585 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:20:16,826 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.4.10.Final}
2020-12-12 11:20:17,203 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-12-12 11:20:17,520 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:20:17,687 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:20:20,834 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:20:20,848 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:20:20,909 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:20:21,199 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:20:22,678 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1066ec37, org.springframework.security.web.context.SecurityContextPersistenceFilter@6aefdc18, org.springframework.security.web.header.HeaderWriterFilter@69cdeb79, org.springframework.security.web.csrf.CsrfFilter@70b34790, org.springframework.security.web.authentication.logout.LogoutFilter@7100274c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@69ba152a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3ed95583, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@67c1521, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d8c1605, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c313305, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f6898bc, org.springframework.security.web.session.SessionManagementFilter@6f4db24a, org.springframework.security.web.access.ExceptionTranslationFilter@5524c827, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e71ec60]
2020-12-12 11:20:22,946 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:20:24,672 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:20:24,741 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:20:24,827 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:20:24,839 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 16.875 seconds (JVM running for 18.642)
2020-12-12 11:20:24,962 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:22:23,731 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 11:22:23,733 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-6] Initializing Servlet 'dispatcherServlet'
2020-12-12 11:22:23,761 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-6] Completed initialization in 27 ms
2020-12-12 11:23:14,033 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-4] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:14,077 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-4] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:14,082 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:23:14,114 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:23:14,118 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:23:14,124 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:23:14,126 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:23:14,131 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:23:14,132 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:23:14,135 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:23:14,352 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-4] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:23:14,353 INFO com.zaxxer.hikari.HikariDataSource [Thread-4] HikariPool-1 - Shutdown initiated...
2020-12-12 11:23:14,361 INFO com.zaxxer.hikari.HikariDataSource [Thread-4] HikariPool-1 - Shutdown completed.
2020-12-12 11:23:15,230 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:23:15,231 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:23:15,231 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:23:16,318 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:23:16,431 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 111ms. Found 10 JPA repository interfaces.
2020-12-12 11:23:16,679 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:23:16,811 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:23:16,813 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:16,814 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:23:16,816 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:23:17,100 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:23:17,111 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:23:17,112 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1875 ms
2020-12-12 11:23:17,185 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Starting...
2020-12-12 11:23:17,194 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Start completed.
2020-12-12 11:23:17,195 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:23:17,449 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:23:17,492 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:23:17,540 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:23:18,650 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:23:18,651 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:18,665 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:23:18,818 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:23:19,628 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14c56a8e, org.springframework.security.web.context.SecurityContextPersistenceFilter@583c42f8, org.springframework.security.web.header.HeaderWriterFilter@609e5f81, org.springframework.security.web.csrf.CsrfFilter@66f058f0, org.springframework.security.web.authentication.logout.LogoutFilter@aeae09d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@390874e0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1500224c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@15820fdd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@468c6a5b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54fc575c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7fd17e45, org.springframework.security.web.session.SessionManagementFilter@3cefaa4d, org.springframework.security.web.access.ExceptionTranslationFilter@83d5b9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c6edae2]
2020-12-12 11:23:19,759 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:21,000 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:23:21,041 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:21,051 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:23:21,053 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 5.901 seconds (JVM running for 194.856)
2020-12-12 11:23:21,079 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:23:21,080 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:23:27,792 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-9] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:27,801 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-9] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:27,805 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:23:27,824 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:23:27,827 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:23:27,829 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:23:27,840 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:23:27,846 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:23:27,848 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:23:27,852 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:23:28,119 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-9] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:23:28,120 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown initiated...
2020-12-12 11:23:28,124 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown completed.
2020-12-12 11:23:28,891 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:23:28,892 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:23:28,892 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:23:29,645 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:23:29,741 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 95ms. Found 10 JPA repository interfaces.
2020-12-12 11:23:29,884 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:23:29,975 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:23:29,977 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:29,978 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:23:29,978 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:23:30,252 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:23:30,260 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:23:30,261 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1364 ms
2020-12-12 11:23:30,317 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Starting...
2020-12-12 11:23:30,329 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Start completed.
2020-12-12 11:23:30,330 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:23:30,522 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:23:30,558 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:23:30,580 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:23:31,067 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:23:31,068 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:31,075 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:23:31,171 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:23:31,529 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73319fb8, org.springframework.security.web.context.SecurityContextPersistenceFilter@75899ae, org.springframework.security.web.header.HeaderWriterFilter@16472b9e, org.springframework.security.web.csrf.CsrfFilter@78ca10e3, org.springframework.security.web.authentication.logout.LogoutFilter@20cbe0de, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5addf2eb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@22344778, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@672c75b2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cb1bb20, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@638562f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66e230d, org.springframework.security.web.session.SessionManagementFilter@2fbdd9b2, org.springframework.security.web.access.ExceptionTranslationFilter@626538f5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36aaf133]
2020-12-12 11:23:31,619 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:32,459 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:23:32,496 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:32,513 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:23:32,515 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.675 seconds (JVM running for 206.318)
2020-12-12 11:23:32,518 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:23:32,518 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:23:37,192 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-15] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:37,196 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-15] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:37,196 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:23:37,201 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:23:37,203 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:23:37,205 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:23:37,206 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:23:37,208 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:23:37,209 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:23:37,211 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:23:37,425 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-15] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:23:37,426 INFO com.zaxxer.hikari.HikariDataSource [Thread-15] HikariPool-3 - Shutdown initiated...
2020-12-12 11:23:37,432 INFO com.zaxxer.hikari.HikariDataSource [Thread-15] HikariPool-3 - Shutdown completed.
2020-12-12 11:23:38,237 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:23:38,238 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:23:38,240 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:23:38,921 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:23:38,996 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 74ms. Found 10 JPA repository interfaces.
2020-12-12 11:23:39,130 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:23:39,227 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:23:39,229 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:39,229 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:23:39,230 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:23:39,489 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:23:39,505 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:23:39,506 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1261 ms
2020-12-12 11:23:39,584 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Starting...
2020-12-12 11:23:39,588 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Start completed.
2020-12-12 11:23:39,589 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:23:39,761 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:23:39,794 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:23:39,814 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:23:40,293 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:23:40,295 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:23:40,307 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:23:40,416 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:23:40,803 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13a16105, org.springframework.security.web.context.SecurityContextPersistenceFilter@362dc136, org.springframework.security.web.header.HeaderWriterFilter@7bfca825, org.springframework.security.web.csrf.CsrfFilter@e6861fe, org.springframework.security.web.authentication.logout.LogoutFilter@2a459944, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@587e9364, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@e62d4f5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@308d16c5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5245dc4d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ce6fba0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1be20280, org.springframework.security.web.session.SessionManagementFilter@7b073839, org.springframework.security.web.access.ExceptionTranslationFilter@4a75df29, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2df0c682]
2020-12-12 11:23:40,894 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:23:41,776 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:23:41,827 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:23:41,836 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:23:41,837 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.66 seconds (JVM running for 215.641)
2020-12-12 11:23:41,840 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:23:41,841 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:24:03,089 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 11:24:03,090 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-4] Initializing Servlet 'dispatcherServlet'
2020-12-12 11:24:03,094 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-4] Completed initialization in 4 ms
2020-12-12 11:24:03,767 WARN org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [627] milliseconds.
2020-12-12 11:24:11,744 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-6] Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"])]
2020-12-12 11:24:15,874 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 11:24:15,888 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 11:24:15,937 ERROR org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView [http-nio-8080-exec-6] Cannot render error page for request [/payments/random/new] and exception [Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Pet["owner"]->org.springframework.samples.petclinic.model.Owner["pets"])] as the response has already been committed. As a result, the response may have the wrong status code.
2020-12-12 11:24:59,762 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-20] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:24:59,767 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-20] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:24:59,769 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:24:59,778 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:24:59,780 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:24:59,782 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:24:59,783 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:24:59,785 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:24:59,786 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:24:59,793 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:25:00,032 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-20] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:25:00,039 INFO com.zaxxer.hikari.HikariDataSource [Thread-20] HikariPool-4 - Shutdown initiated...
2020-12-12 11:25:00,047 INFO com.zaxxer.hikari.HikariDataSource [Thread-20] HikariPool-4 - Shutdown completed.
2020-12-12 11:25:00,967 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:25:00,972 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:25:00,974 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:25:01,741 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:25:01,829 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 87ms. Found 10 JPA repository interfaces.
2020-12-12 11:25:01,974 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:25:02,071 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:25:02,072 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:25:02,073 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:25:02,074 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:25:02,401 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:25:02,407 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:25:02,407 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1428 ms
2020-12-12 11:25:02,690 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Starting...
2020-12-12 11:25:02,715 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Start completed.
2020-12-12 11:25:02,720 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:25:03,154 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:25:03,178 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:25:03,186 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:25:03,770 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:25:03,780 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:25:03,805 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:25:03,945 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:25:04,325 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4bbf52ea, org.springframework.security.web.context.SecurityContextPersistenceFilter@daf4da4, org.springframework.security.web.header.HeaderWriterFilter@1db0ea9b, org.springframework.security.web.csrf.CsrfFilter@132b17b7, org.springframework.security.web.authentication.logout.LogoutFilter@6fa33374, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@28853b8c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@6c8053e3, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@c6335f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@233aeb0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@394429c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5069e326, org.springframework.security.web.session.SessionManagementFilter@46f27c62, org.springframework.security.web.access.ExceptionTranslationFilter@735bbc16, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b98f9cd]
2020-12-12 11:25:04,415 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:25:05,082 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:25:05,102 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:25:05,111 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:25:05,113 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 4.223 seconds (JVM running for 298.917)
2020-12-12 11:25:05,117 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:25:05,117 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:25:15,848 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-25] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:25:15,853 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-25] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:25:15,854 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:25:15,858 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:25:15,860 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:25:15,862 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:25:15,863 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:25:15,865 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:25:15,865 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:25:15,867 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:25:16,096 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-25] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:25:16,097 INFO com.zaxxer.hikari.HikariDataSource [Thread-25] HikariPool-5 - Shutdown initiated...
2020-12-12 11:25:16,102 INFO com.zaxxer.hikari.HikariDataSource [Thread-25] HikariPool-5 - Shutdown completed.
2020-12-12 11:25:16,902 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:25:16,903 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:25:16,903 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:25:17,781 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:25:17,895 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 113ms. Found 10 JPA repository interfaces.
2020-12-12 11:25:18,159 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:25:18,230 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:25:18,231 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:25:18,232 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:25:18,232 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:25:18,370 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:25:18,380 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:25:18,380 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1470 ms
2020-12-12 11:25:18,436 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Starting...
2020-12-12 11:25:18,439 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Start completed.
2020-12-12 11:25:18,439 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:25:18,680 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:25:18,725 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:25:18,735 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:25:19,350 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:25:19,351 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:25:19,361 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:25:19,503 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:25:19,784 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46c17a7a, org.springframework.security.web.context.SecurityContextPersistenceFilter@7bc13948, org.springframework.security.web.header.HeaderWriterFilter@18e769c5, org.springframework.security.web.csrf.CsrfFilter@365b0a4e, org.springframework.security.web.authentication.logout.LogoutFilter@21fc9b9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@784d35c4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@c531e5a, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@e55ad8b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@81e9aff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b147378, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d246fe3, org.springframework.security.web.session.SessionManagementFilter@152658d8, org.springframework.security.web.access.ExceptionTranslationFilter@206a78cf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@622e3983]
2020-12-12 11:25:19,856 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:25:20,434 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:25:20,462 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:25:20,474 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:25:20,479 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.634 seconds (JVM running for 314.282)
2020-12-12 11:25:20,536 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:25:20,537 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:25:36,221 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 11:25:36,224 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Initializing Servlet 'dispatcherServlet'
2020-12-12 11:25:36,230 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-3] Completed initialization in 5 ms
2020-12-12 11:28:32,224 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-30] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:28:32,229 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-30] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:28:32,230 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:28:32,237 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:28:32,239 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:28:32,241 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:28:32,242 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:28:32,243 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:28:32,245 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:28:32,246 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:28:32,463 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-30] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:28:32,464 INFO com.zaxxer.hikari.HikariDataSource [Thread-30] HikariPool-6 - Shutdown initiated...
2020-12-12 11:28:32,470 INFO com.zaxxer.hikari.HikariDataSource [Thread-30] HikariPool-6 - Shutdown completed.
2020-12-12 11:28:33,459 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:28:33,459 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:28:33,460 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:28:34,537 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:28:34,764 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 226ms. Found 10 JPA repository interfaces.
2020-12-12 11:28:35,001 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:28:35,103 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:28:35,104 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:28:35,105 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:28:35,106 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:28:35,333 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:28:35,342 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:28:35,343 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1881 ms
2020-12-12 11:28:35,399 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Starting...
2020-12-12 11:28:35,403 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Start completed.
2020-12-12 11:28:35,404 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:28:35,593 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:28:35,621 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:28:35,636 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:28:35,986 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
2020-12-12 11:28:36,194 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:28:36,195 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Shutdown initiated...
2020-12-12 11:28:36,200 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Shutdown completed.
2020-12-12 11:28:36,208 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 11:28:36,229 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 11:28:36,234 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 21 common frames omitted
Caused by: org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:123)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:77)
	at org.hibernate.metamodel.internal.MetamodelImpl.initialize(MetamodelImpl.java:181)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:305)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 25 common frames omitted
Caused by: org.hibernate.InstantiationException: could not instantiate test object : org.springframework.samples.petclinic.model.Payment
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:43)
	at org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(UnsavedValueFactory.java:68)
	at org.hibernate.tuple.PropertyFactory.buildIdentifierAttribute(PropertyFactory.java:62)
	at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:136)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:589)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:125)
	at jdk.internal.reflect.GeneratedConstructorAccessor87.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:96)
	... 33 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:40)
	... 42 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	EntityListeners cannot be resolved to a type
	AuditingEntityListener cannot be resolved to a type

	at org.springframework.samples.petclinic.model.AuditableEntity.<init>(AuditableEntity.java:14)
	at org.springframework.samples.petclinic.model.Payment.<init>(Payment.java:8)
	... 47 common frames omitted
2020-12-12 11:28:47,435 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:28:47,435 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:28:47,436 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:28:48,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:28:48,811 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 158ms. Found 10 JPA repository interfaces.
2020-12-12 11:28:49,064 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:28:49,225 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:28:49,226 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:28:49,241 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:28:49,242 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:28:49,633 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:28:49,643 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:28:49,652 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2213 ms
2020-12-12 11:28:49,724 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Starting...
2020-12-12 11:28:49,733 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Start completed.
2020-12-12 11:28:49,733 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:28:50,000 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:28:50,039 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:28:50,055 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:28:50,516 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:28:50,518 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:28:50,535 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:28:50,657 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:28:51,093 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1dd4674b, org.springframework.security.web.context.SecurityContextPersistenceFilter@31daa5, org.springframework.security.web.header.HeaderWriterFilter@496f5820, org.springframework.security.web.csrf.CsrfFilter@426911a5, org.springframework.security.web.authentication.logout.LogoutFilter@2be0b680, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3d312257, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@433f1792, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5fa4d834, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bc8dfd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@31217bd2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f2b917e, org.springframework.security.web.session.SessionManagementFilter@adf1662, org.springframework.security.web.access.ExceptionTranslationFilter@7dcff816, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22245573]
2020-12-12 11:28:51,166 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:28:51,687 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:28:51,701 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:28:51,714 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:28:51,715 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 4.326 seconds (JVM running for 525.519)
2020-12-12 11:28:51,717 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:28:51,717 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:29:16,946 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-8] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 11:29:16,947 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-8] Initializing Servlet 'dispatcherServlet'
2020-12-12 11:29:16,950 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-8] Completed initialization in 2 ms
2020-12-12 11:31:58,709 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-35] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:31:58,710 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-35] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:31:58,711 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:31:58,717 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:31:58,718 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:31:58,719 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:31:58,721 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:31:58,722 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:31:58,723 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:31:58,724 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:31:58,938 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-35] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:31:58,939 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-8 - Shutdown initiated...
2020-12-12 11:31:58,942 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-8 - Shutdown completed.
2020-12-12 11:31:59,822 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:31:59,822 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:31:59,823 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:32:00,369 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:32:00,442 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 72ms. Found 10 JPA repository interfaces.
2020-12-12 11:32:00,760 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:32:00,834 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:32:00,835 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:32:00,836 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:32:00,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:32:01,050 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:32:01,055 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:32:01,055 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1229 ms
2020-12-12 11:32:01,117 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-9 - Starting...
2020-12-12 11:32:01,120 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-9 - Start completed.
2020-12-12 11:32:01,121 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:32:01,278 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:32:01,302 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:32:01,312 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:32:01,740 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:32:01,741 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:32:01,747 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:32:01,828 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:32:02,224 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6be68315, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ffa4a9a, org.springframework.security.web.header.HeaderWriterFilter@4b727425, org.springframework.security.web.csrf.CsrfFilter@4c6ce347, org.springframework.security.web.authentication.logout.LogoutFilter@6a47b12c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7b40666c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@74f58d01, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7ce7d7b9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@675e8b92, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3f550800, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3863a80f, org.springframework.security.web.session.SessionManagementFilter@74a7e992, org.springframework.security.web.access.ExceptionTranslationFilter@72695ea1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6344f08a]
2020-12-12 11:32:02,320 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:32:03,105 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:32:03,130 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:32:03,142 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:32:03,144 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.368 seconds (JVM running for 716.948)
2020-12-12 11:32:03,155 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:32:03,155 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:32:09,944 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-43] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:32:09,947 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-43] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:32:09,947 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:32:09,950 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:32:09,951 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:32:09,954 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:32:09,955 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:32:09,957 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:32:09,957 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:32:09,959 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-43] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:32:10,176 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-43] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:32:10,179 INFO com.zaxxer.hikari.HikariDataSource [Thread-43] HikariPool-9 - Shutdown initiated...
2020-12-12 11:32:10,186 INFO com.zaxxer.hikari.HikariDataSource [Thread-43] HikariPool-9 - Shutdown completed.
2020-12-12 11:32:11,094 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:32:11,094 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:32:11,095 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:32:11,630 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:32:11,805 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 174ms. Found 10 JPA repository interfaces.
2020-12-12 11:32:12,042 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:32:12,158 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:32:12,159 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:32:12,160 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:32:12,161 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:32:12,297 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:32:12,301 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:32:12,302 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1204 ms
2020-12-12 11:32:12,349 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-10 - Starting...
2020-12-12 11:32:12,352 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-10 - Start completed.
2020-12-12 11:32:12,353 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:32:12,479 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:32:12,503 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:32:12,531 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:32:12,966 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:32:12,967 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:32:12,975 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:32:13,038 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:32:13,476 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21affcb3, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d0059a6, org.springframework.security.web.header.HeaderWriterFilter@64fa2882, org.springframework.security.web.csrf.CsrfFilter@13746997, org.springframework.security.web.authentication.logout.LogoutFilter@6e6f19fb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@63fd4bed, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1e4a864, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5522cfa5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c258195, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@592e1aab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@b58e4b8, org.springframework.security.web.session.SessionManagementFilter@1d08a341, org.springframework.security.web.access.ExceptionTranslationFilter@2aad793a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@310df52c]
2020-12-12 11:32:13,532 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:32:14,030 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:32:14,049 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:32:14,057 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:32:14,058 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.011 seconds (JVM running for 727.861)
2020-12-12 11:32:14,060 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:32:14,060 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:34:13,256 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-48] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:34:13,259 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-48] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:34:13,260 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:34:13,264 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:34:13,267 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:34:13,269 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:34:13,270 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:34:13,271 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:34:13,273 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:34:13,281 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-48] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:34:13,513 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-48] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:34:13,514 INFO com.zaxxer.hikari.HikariDataSource [Thread-48] HikariPool-10 - Shutdown initiated...
2020-12-12 11:34:13,521 INFO com.zaxxer.hikari.HikariDataSource [Thread-48] HikariPool-10 - Shutdown completed.
2020-12-12 11:34:14,607 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:34:14,608 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:34:14,608 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:34:15,071 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:34:15,140 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68ms. Found 10 JPA repository interfaces.
2020-12-12 11:34:15,239 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:34:15,308 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:34:15,309 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:34:15,310 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:34:15,310 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:34:15,444 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:34:15,450 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:34:15,451 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 839 ms
2020-12-12 11:34:15,493 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-11 - Starting...
2020-12-12 11:34:15,496 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-11 - Start completed.
2020-12-12 11:34:15,497 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:34:15,618 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:34:15,636 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:34:15,643 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:34:15,966 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:34:15,967 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:34:15,974 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:34:16,020 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:34:16,283 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@430c9b87, org.springframework.security.web.context.SecurityContextPersistenceFilter@47f26551, org.springframework.security.web.header.HeaderWriterFilter@4775a47, org.springframework.security.web.csrf.CsrfFilter@56a8fd07, org.springframework.security.web.authentication.logout.LogoutFilter@1a0aba89, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@56678765, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@12d4cccc, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6c6656a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65f73f2f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bece4b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42ed58cb, org.springframework.security.web.session.SessionManagementFilter@5623ea57, org.springframework.security.web.access.ExceptionTranslationFilter@60484de5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36530ec5]
2020-12-12 11:34:16,335 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:34:16,768 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:34:16,786 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:34:16,795 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:34:16,797 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.238 seconds (JVM running for 850.601)
2020-12-12 11:34:16,801 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:34:16,802 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:34:26,810 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-53] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:34:26,814 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-53] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:34:26,815 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:34:26,823 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:34:26,838 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:34:26,840 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:34:26,842 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:34:26,850 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:34:26,850 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:34:26,854 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-53] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:34:27,113 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-53] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:34:27,114 INFO com.zaxxer.hikari.HikariDataSource [Thread-53] HikariPool-11 - Shutdown initiated...
2020-12-12 11:34:27,148 INFO com.zaxxer.hikari.HikariDataSource [Thread-53] HikariPool-11 - Shutdown completed.
2020-12-12 11:34:28,097 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:34:28,097 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:34:28,097 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:34:28,537 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:34:28,603 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 10 JPA repository interfaces.
2020-12-12 11:34:28,732 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:34:28,797 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:34:28,798 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:34:28,799 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:34:28,799 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:34:28,966 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:34:28,971 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:34:28,972 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 872 ms
2020-12-12 11:34:29,013 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-12 - Starting...
2020-12-12 11:34:29,015 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-12 - Start completed.
2020-12-12 11:34:29,016 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:34:29,283 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:34:29,325 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:34:29,334 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:34:29,961 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:34:29,963 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:34:29,972 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:34:30,038 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:34:30,279 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55e28728, org.springframework.security.web.context.SecurityContextPersistenceFilter@58e6e606, org.springframework.security.web.header.HeaderWriterFilter@6f671d99, org.springframework.security.web.csrf.CsrfFilter@b8ed75f, org.springframework.security.web.authentication.logout.LogoutFilter@6d58dcf8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@632734aa, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@50862e93, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@616a1374, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d61ea86, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a3daf66, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fc735c1, org.springframework.security.web.session.SessionManagementFilter@252ff9d3, org.springframework.security.web.access.ExceptionTranslationFilter@536add09, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69d141]
2020-12-12 11:34:30,325 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:34:30,752 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:34:30,780 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:34:30,788 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:34:30,789 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.728 seconds (JVM running for 864.592)
2020-12-12 11:34:30,794 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:34:30,794 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:35:41,839 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-58] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:35:41,841 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-58] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:35:41,842 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:35:41,857 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:35:41,866 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:35:41,869 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:35:41,870 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:35:41,890 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:35:41,891 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:35:41,892 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-58] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:35:42,127 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-58] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:35:42,128 INFO com.zaxxer.hikari.HikariDataSource [Thread-58] HikariPool-12 - Shutdown initiated...
2020-12-12 11:35:42,137 INFO com.zaxxer.hikari.HikariDataSource [Thread-58] HikariPool-12 - Shutdown completed.
2020-12-12 11:35:42,997 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:35:42,997 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:35:42,997 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:35:43,590 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:35:43,719 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 128ms. Found 10 JPA repository interfaces.
2020-12-12 11:35:43,879 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:35:43,986 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:35:43,991 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:35:43,995 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:35:44,000 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:35:44,199 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:35:44,205 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:35:44,205 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1204 ms
2020-12-12 11:35:44,282 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-13 - Starting...
2020-12-12 11:35:44,284 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-13 - Start completed.
2020-12-12 11:35:44,284 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:35:44,396 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:35:44,418 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:35:44,427 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:35:44,722 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:35:44,723 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:35:44,731 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:35:44,780 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:35:45,138 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b9bcdf8, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c81a527, org.springframework.security.web.header.HeaderWriterFilter@692b3f69, org.springframework.security.web.csrf.CsrfFilter@6e64d5c2, org.springframework.security.web.authentication.logout.LogoutFilter@f112728, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@73bda398, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2203aaf2, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2fdcbb7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bace77a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bcc5111, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24126ddc, org.springframework.security.web.session.SessionManagementFilter@483aab0, org.springframework.security.web.access.ExceptionTranslationFilter@69e5d1fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@14f3f6cc]
2020-12-12 11:35:45,241 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:35:45,734 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:35:45,751 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:35:45,758 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:35:45,759 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.802 seconds (JVM running for 939.563)
2020-12-12 11:35:45,763 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:35:45,763 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:36:39,794 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-63] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 11:36:39,798 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-63] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:36:39,798 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 11:36:39,802 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 11:36:39,803 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 11:36:39,804 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 11:36:39,804 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 11:36:39,810 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 11:36:39,812 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 11:36:39,813 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-63] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 11:36:40,029 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-63] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 11:36:40,030 INFO com.zaxxer.hikari.HikariDataSource [Thread-63] HikariPool-13 - Shutdown initiated...
2020-12-12 11:36:40,036 INFO com.zaxxer.hikari.HikariDataSource [Thread-63] HikariPool-13 - Shutdown completed.
2020-12-12 11:36:40,885 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 11:36:40,885 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 11:36:40,886 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 11:36:42,045 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 11:36:42,654 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 609ms. Found 10 JPA repository interfaces.
2020-12-12 11:36:42,844 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 11:36:42,958 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 11:36:42,959 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 11:36:42,961 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 11:36:42,961 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 11:36:43,170 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 11:36:43,176 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 11:36:43,177 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2288 ms
2020-12-12 11:36:43,246 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-14 - Starting...
2020-12-12 11:36:43,251 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-14 - Start completed.
2020-12-12 11:36:43,251 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 11:36:43,537 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 11:36:43,584 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 11:36:43,598 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 11:36:44,059 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 11:36:44,061 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 11:36:44,068 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 11:36:44,137 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 11:36:44,558 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27fc031b, org.springframework.security.web.context.SecurityContextPersistenceFilter@d70c21, org.springframework.security.web.header.HeaderWriterFilter@716f8219, org.springframework.security.web.csrf.CsrfFilter@754b8d91, org.springframework.security.web.authentication.logout.LogoutFilter@249be53f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@34287957, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@427951bb, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@12f251f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f6e2b83, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@221c1b3d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16846aa5, org.springframework.security.web.session.SessionManagementFilter@29d93b8e, org.springframework.security.web.access.ExceptionTranslationFilter@785ae999, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@fa313ec]
2020-12-12 11:36:44,688 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 11:36:45,530 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 11:36:45,554 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 11:36:45,565 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 11:36:45,567 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 4.721 seconds (JVM running for 999.371)
2020-12-12 11:36:45,570 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 11:36:45,571 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 11:37:02,566 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 11:37:02,567 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-6] Initializing Servlet 'dispatcherServlet'
2020-12-12 11:37:02,571 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-6] Completed initialization in 4 ms
2020-12-12 13:29:28,065 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-14 housekeeper] HikariPool-14 - Thread starvation or clock leap detected (housekeeper delta=1h21m44s211ms457µs200ns).
2020-12-12 13:32:55,240 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-68] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:32:55,242 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-68] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:32:55,243 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:32:55,249 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:32:55,251 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:32:55,254 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:32:55,254 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:32:55,255 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:32:55,256 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:32:55,256 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-68] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:32:55,470 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-68] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:32:55,471 INFO com.zaxxer.hikari.HikariDataSource [Thread-68] HikariPool-14 - Shutdown initiated...
2020-12-12 13:32:55,474 INFO com.zaxxer.hikari.HikariDataSource [Thread-68] HikariPool-14 - Shutdown completed.
2020-12-12 13:32:56,383 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:32:56,383 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:32:56,383 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:32:57,221 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:32:57,256 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
java.lang.NoClassDefFoundError: List
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.privateGetPublicMethods(Class.java:3191)
	at java.base/java.lang.Class.getMethods(Class.java:1904)
	at org.springframework.data.repository.util.ReactiveWrappers.usesReactiveType(ReactiveWrappers.java:171)
	at org.springframework.data.repository.core.support.AbstractRepositoryMetadata.isReactiveRepository(AbstractRepositoryMetadata.java:129)
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.useRepositoryConfiguration(RepositoryConfigurationExtensionSupport.java:365)
	at org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport.getRepositoryConfigurations(RepositoryConfigurationExtensionSupport.java:107)
	at org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn(RepositoryConfigurationDelegate.java:148)
	at org.springframework.boot.autoconfigure.data.AbstractRepositoryConfigurationSourceSupport.registerBeanDefinitions(AbstractRepositoryConfigurationSourceSupport.java:62)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:385)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:384)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:148)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:120)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:706)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ClassNotFoundException: List
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 33 common frames omitted
2020-12-12 13:33:02,047 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-12-12 13:33:02,049 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-12-12 13:33:02,059 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:33:02,059 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:33:02,059 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:33:02,510 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:33:02,568 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 10 JPA repository interfaces.
2020-12-12 13:33:02,693 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:33:02,767 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:33:02,768 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:33:02,769 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:33:02,770 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:33:03,060 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:33:03,064 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:33:03,065 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1003 ms
2020-12-12 13:33:03,131 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-15 - Starting...
2020-12-12 13:33:03,135 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-15 - Start completed.
2020-12-12 13:33:03,136 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:33:03,277 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:33:03,301 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:33:03,312 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:33:03,665 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:33:03,666 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:33:03,677 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:33:03,808 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:33:04,143 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d233be9, org.springframework.security.web.context.SecurityContextPersistenceFilter@32ec15c0, org.springframework.security.web.header.HeaderWriterFilter@59abb663, org.springframework.security.web.csrf.CsrfFilter@325ab0, org.springframework.security.web.authentication.logout.LogoutFilter@503e5286, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@29a8d0db, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7184d48c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@164e73f7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c0dfa9f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18914fd3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@200dff59, org.springframework.security.web.session.SessionManagementFilter@20993cb9, org.springframework.security.web.access.ExceptionTranslationFilter@5efe0624, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a2d9b1c]
2020-12-12 13:33:04,250 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:33:04,907 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:33:04,923 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:33:04,931 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:33:04,932 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.901 seconds (JVM running for 7978.735)
2020-12-12 13:33:04,933 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:33:04,934 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:33:45,773 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-73] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:33:45,774 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-73] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:33:45,775 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:33:45,778 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:33:45,780 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:33:45,781 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:33:45,782 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:33:45,783 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:33:45,784 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:33:45,784 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-73] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:33:45,990 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-73] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:33:45,991 INFO com.zaxxer.hikari.HikariDataSource [Thread-73] HikariPool-15 - Shutdown initiated...
2020-12-12 13:33:45,996 INFO com.zaxxer.hikari.HikariDataSource [Thread-73] HikariPool-15 - Shutdown completed.
2020-12-12 13:33:46,911 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:33:46,911 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:33:46,911 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:33:47,467 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:33:47,601 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 133ms. Found 10 JPA repository interfaces.
2020-12-12 13:33:47,704 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:33:47,767 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:33:47,769 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:33:47,770 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:33:47,770 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:33:47,959 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:33:47,965 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:33:47,965 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1050 ms
2020-12-12 13:33:48,017 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-16 - Starting...
2020-12-12 13:33:48,021 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-16 - Start completed.
2020-12-12 13:33:48,023 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:33:48,298 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:33:48,331 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:33:48,339 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:33:48,668 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:33:48,669 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:33:48,681 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:33:48,753 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:33:49,064 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8843ae6, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d6ccdc8, org.springframework.security.web.header.HeaderWriterFilter@19147c41, org.springframework.security.web.csrf.CsrfFilter@4e2edb1f, org.springframework.security.web.authentication.logout.LogoutFilter@5a110b1e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f5965ec, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@573cb9de, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@61d78354, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7885d4fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@424949df, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b7f2fdd, org.springframework.security.web.session.SessionManagementFilter@5a20840, org.springframework.security.web.access.ExceptionTranslationFilter@2ffd4a3d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22671aa1]
2020-12-12 13:33:49,223 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:33:50,077 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:33:50,092 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:33:50,098 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:33:50,099 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.223 seconds (JVM running for 8023.903)
2020-12-12 13:33:50,101 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:33:50,101 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:37:02,866 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-81] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:37:02,870 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-81] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:02,870 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:37:02,877 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:37:02,878 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:37:02,879 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:37:02,880 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:37:02,885 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:37:02,886 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:37:02,887 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-81] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:37:03,096 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-81] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:37:03,097 INFO com.zaxxer.hikari.HikariDataSource [Thread-81] HikariPool-16 - Shutdown initiated...
2020-12-12 13:37:03,101 INFO com.zaxxer.hikari.HikariDataSource [Thread-81] HikariPool-16 - Shutdown completed.
2020-12-12 13:37:03,952 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:37:03,953 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:37:03,953 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:37:04,387 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:37:04,491 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 102ms. Found 10 JPA repository interfaces.
2020-12-12 13:37:04,610 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:37:04,683 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:37:04,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:37:04,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:37:04,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:37:04,807 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:37:04,812 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:37:04,813 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 857 ms
2020-12-12 13:37:04,848 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-17 - Starting...
2020-12-12 13:37:04,851 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-17 - Start completed.
2020-12-12 13:37:04,851 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:37:05,014 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:37:05,036 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:37:05,044 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:37:05,426 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:37:05,430 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:05,462 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:37:05,557 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:37:05,881 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c74acb4, org.springframework.security.web.context.SecurityContextPersistenceFilter@18b90cae, org.springframework.security.web.header.HeaderWriterFilter@62c72813, org.springframework.security.web.csrf.CsrfFilter@101b84aa, org.springframework.security.web.authentication.logout.LogoutFilter@57125308, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3baade04, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@15444fe5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6cbb61fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@45baee50, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e66d144, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@557aed57, org.springframework.security.web.session.SessionManagementFilter@544bfc59, org.springframework.security.web.access.ExceptionTranslationFilter@7d240f56, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@af671d3]
2020-12-12 13:37:05,935 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:37:06,417 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:37:06,439 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:37:06,447 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:37:06,449 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.536 seconds (JVM running for 8220.253)
2020-12-12 13:37:06,451 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:37:06,451 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:37:32,159 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-86] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:37:32,163 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-86] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:32,163 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:37:32,168 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:37:32,169 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:37:32,171 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:37:32,171 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:37:32,172 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:37:32,172 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:37:32,174 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-86] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:37:32,383 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-86] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:37:32,383 INFO com.zaxxer.hikari.HikariDataSource [Thread-86] HikariPool-17 - Shutdown initiated...
2020-12-12 13:37:32,389 INFO com.zaxxer.hikari.HikariDataSource [Thread-86] HikariPool-17 - Shutdown completed.
2020-12-12 13:37:33,347 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:37:33,347 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:37:33,348 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:37:33,868 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:37:33,942 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 73ms. Found 10 JPA repository interfaces.
2020-12-12 13:37:34,032 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:37:34,132 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:37:34,135 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:37:34,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:37:34,136 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:37:34,290 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:37:34,315 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:37:34,317 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 967 ms
2020-12-12 13:37:34,374 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-18 - Starting...
2020-12-12 13:37:34,377 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-18 - Start completed.
2020-12-12 13:37:34,378 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:37:34,538 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:37:34,566 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:37:34,574 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:37:34,815 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:37:34,816 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:34,820 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:37:34,859 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:37:35,087 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1543228b, org.springframework.security.web.context.SecurityContextPersistenceFilter@24896c02, org.springframework.security.web.header.HeaderWriterFilter@392422d, org.springframework.security.web.csrf.CsrfFilter@19b14e20, org.springframework.security.web.authentication.logout.LogoutFilter@356730fd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7aa7a376, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1b69fce1, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1cdc42a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ae5758f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bf7d1d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7fa058f4, org.springframework.security.web.session.SessionManagementFilter@375af487, org.springframework.security.web.access.ExceptionTranslationFilter@371f37b3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d29c6da]
2020-12-12 13:37:35,130 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:37:35,602 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:37:35,618 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:37:35,628 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:37:35,630 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.34 seconds (JVM running for 8249.434)
2020-12-12 13:37:35,640 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:37:35,641 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:37:46,603 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-91] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:37:46,607 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-91] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:46,608 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:37:46,612 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:37:46,613 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:37:46,614 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:37:46,615 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:37:46,615 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:37:46,616 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:37:46,617 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-91] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:37:46,833 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-91] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:37:46,834 INFO com.zaxxer.hikari.HikariDataSource [Thread-91] HikariPool-18 - Shutdown initiated...
2020-12-12 13:37:46,846 INFO com.zaxxer.hikari.HikariDataSource [Thread-91] HikariPool-18 - Shutdown completed.
2020-12-12 13:37:48,409 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:37:48,410 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:37:48,411 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:37:49,135 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:37:49,202 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 66ms. Found 10 JPA repository interfaces.
2020-12-12 13:37:49,353 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:37:49,430 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:37:49,432 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:37:49,433 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:37:49,433 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:37:49,621 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:37:49,625 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:37:49,625 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1209 ms
2020-12-12 13:37:49,667 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Starting...
2020-12-12 13:37:49,669 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Start completed.
2020-12-12 13:37:49,670 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:37:49,800 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:37:49,827 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:37:49,835 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:37:50,360 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:37:50,361 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:50,375 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:37:50,491 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:37:50,886 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@655645ff]
2020-12-12 13:37:50,890 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:37:50,891 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:37:50,893 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:37:50,894 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:37:50,895 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:37:50,895 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:37:50,896 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:37:50,896 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:37:50,897 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:37:51,109 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:37:51,116 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Shutdown initiated...
2020-12-12 13:37:51,129 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-19 - Shutdown completed.
2020-12-12 13:37:51,135 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:37:51,147 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:37:51,149 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@655645ff]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@655645ff]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Visit
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: Visit
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 29 common frames omitted
2020-12-12 13:38:24,359 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:38:24,359 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:38:24,359 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:38:24,813 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:38:24,894 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 81ms. Found 10 JPA repository interfaces.
2020-12-12 13:38:25,025 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:38:25,085 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:38:25,086 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:38:25,086 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:38:25,087 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:38:25,207 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:38:25,211 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:38:25,211 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 850 ms
2020-12-12 13:38:25,250 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Starting...
2020-12-12 13:38:25,253 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Start completed.
2020-12-12 13:38:25,254 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:38:25,385 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:38:25,408 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:38:25,416 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:38:25,686 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:38:25,686 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:38:25,693 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:38:25,744 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:38:25,977 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f700aaa]
2020-12-12 13:38:25,978 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:38:25,979 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:38:25,985 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:38:25,986 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:38:25,987 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:38:25,988 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:38:25,988 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:38:25,989 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:38:25,990 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:38:26,205 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:38:26,205 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Shutdown initiated...
2020-12-12 13:38:26,206 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-20 - Shutdown completed.
2020-12-12 13:38:26,207 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:38:26,226 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:38:26,235 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f700aaa]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.web.BillController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1f700aaa]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: Visit
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: Visit
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 29 common frames omitted
2020-12-12 13:38:39,688 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:38:39,689 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:38:39,691 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:38:40,265 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:38:40,337 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71ms. Found 10 JPA repository interfaces.
2020-12-12 13:38:40,423 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:38:40,503 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:38:40,507 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:38:40,508 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:38:40,509 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:38:40,714 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:38:40,719 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:38:40,720 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1025 ms
2020-12-12 13:38:40,918 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Starting...
2020-12-12 13:38:40,921 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Start completed.
2020-12-12 13:38:40,922 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:38:41,238 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:38:41,303 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:38:41,313 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:38:41,710 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:38:41,711 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:38:41,718 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:38:41,806 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:38:42,007 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController' defined in file [C:\workspace\teaching\dp1\spring-petclinic\target\classes\org\springframework\samples\petclinic\web\BillController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.samples.petclinic.web.BillController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	VisitService cannot be resolved to a type
	The method findRandomVisit() is undefined for the type BillController
	The method findRandomVisit() is undefined for the type BillController
	VisitService cannot be resolved to a type

2020-12-12 13:38:42,008 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:38:42,009 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:38:42,012 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:38:42,013 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:38:42,015 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:38:42,015 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:38:42,016 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:38:42,017 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:38:42,019 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:38:42,228 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:38:42,229 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Shutdown initiated...
2020-12-12 13:38:42,231 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-21 - Shutdown completed.
2020-12-12 13:38:42,233 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:38:42,241 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:38:42,242 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'billController' defined in file [C:\workspace\teaching\dp1\spring-petclinic\target\classes\org\springframework\samples\petclinic\web\BillController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.samples.petclinic.web.BillController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	VisitService cannot be resolved to a type
	The method findRandomVisit() is undefined for the type BillController
	The method findRandomVisit() is undefined for the type BillController
	VisitService cannot be resolved to a type

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1320)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.samples.petclinic.web.BillController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	VisitService cannot be resolved to a type
	The method findRandomVisit() is undefined for the type BillController
	The method findRandomVisit() is undefined for the type BillController
	VisitService cannot be resolved to a type

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:216)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1312)
	... 22 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problems: 
	VisitService cannot be resolved to a type
	The method findRandomVisit() is undefined for the type BillController
	The method findRandomVisit() is undefined for the type BillController
	VisitService cannot be resolved to a type

	at org.springframework.samples.petclinic.web.BillController.<init>(BillController.java:22)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:203)
	... 24 common frames omitted
2020-12-12 13:38:51,164 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:38:51,165 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:38:51,165 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:38:51,598 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:38:51,651 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 52ms. Found 10 JPA repository interfaces.
2020-12-12 13:38:51,795 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:38:51,883 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:38:51,884 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:38:51,885 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:38:51,886 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:38:52,038 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:38:52,043 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:38:52,044 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 875 ms
2020-12-12 13:38:52,081 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-22 - Starting...
2020-12-12 13:38:52,084 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-22 - Start completed.
2020-12-12 13:38:52,084 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:38:52,179 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:38:52,205 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:38:52,214 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:38:52,622 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:38:52,623 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:38:52,635 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:38:52,707 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:38:53,013 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@187e2ff6, org.springframework.security.web.context.SecurityContextPersistenceFilter@64b00b8c, org.springframework.security.web.header.HeaderWriterFilter@5182776c, org.springframework.security.web.csrf.CsrfFilter@52ec73c1, org.springframework.security.web.authentication.logout.LogoutFilter@54a3b7c0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@237dc58d, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@8563ba2, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@474e17e2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@757e256, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@452cccc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58758e07, org.springframework.security.web.session.SessionManagementFilter@55f30888, org.springframework.security.web.access.ExceptionTranslationFilter@bcd092d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@704dfd39]
2020-12-12 13:38:53,111 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:38:53,630 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:38:53,661 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:38:53,687 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:38:53,688 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.558 seconds (JVM running for 8327.491)
2020-12-12 13:38:53,693 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:38:53,694 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:39:56,547 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-96] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:39:56,550 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-96] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:39:56,551 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:39:56,554 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:39:56,555 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:39:56,556 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:39:56,556 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:39:56,557 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:39:56,557 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:39:56,558 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-96] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:39:56,773 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-96] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:39:56,773 INFO com.zaxxer.hikari.HikariDataSource [Thread-96] HikariPool-22 - Shutdown initiated...
2020-12-12 13:39:56,774 INFO com.zaxxer.hikari.HikariDataSource [Thread-96] HikariPool-22 - Shutdown completed.
2020-12-12 13:39:57,876 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:39:57,877 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:39:57,877 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:39:58,424 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:39:58,531 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 106ms. Found 10 JPA repository interfaces.
2020-12-12 13:39:58,637 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:39:58,701 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:39:58,704 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:39:58,705 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:39:58,705 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:39:58,830 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:39:58,834 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:39:58,834 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 953 ms
2020-12-12 13:39:58,875 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Starting...
2020-12-12 13:39:58,881 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Start completed.
2020-12-12 13:39:58,882 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:39:59,010 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:39:59,051 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:39:59,065 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:39:59,349 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:39:59,349 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:39:59,357 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:39:59,432 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:39:59,903 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4cc361a7]
2020-12-12 13:39:59,904 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:39:59,905 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:39:59,907 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:39:59,908 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:39:59,909 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:39:59,910 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:39:59,910 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:39:59,911 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:39:59,915 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:40:00,130 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:40:00,131 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Shutdown initiated...
2020-12-12 13:40:00,132 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-23 - Shutdown completed.
2020-12-12 13:40:00,133 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:40:00,138 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:40:00,139 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4cc361a7]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4cc361a7]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: List
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: List
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 29 common frames omitted
2020-12-12 13:40:18,578 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:40:18,578 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:40:18,579 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:40:18,989 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:40:19,052 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62ms. Found 10 JPA repository interfaces.
2020-12-12 13:40:19,133 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:40:19,253 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:40:19,254 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:40:19,256 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:40:19,256 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:40:19,411 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:40:19,418 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:40:19,418 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 837 ms
2020-12-12 13:40:19,457 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Starting...
2020-12-12 13:40:19,460 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Start completed.
2020-12-12 13:40:19,461 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:40:19,623 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:40:19,651 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:40:19,658 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:40:19,917 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:40:19,917 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:40:19,922 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:40:19,955 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:40:20,172 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@601a9a9d]
2020-12-12 13:40:20,173 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:40:20,173 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:40:20,176 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:40:20,179 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:40:20,180 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:40:20,181 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:40:20,181 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:40:20,182 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:40:20,182 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:40:20,394 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:40:20,395 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Shutdown initiated...
2020-12-12 13:40:20,397 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-24 - Shutdown completed.
2020-12-12 13:40:20,398 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:40:20,405 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:40:20,406 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@601a9a9d]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@601a9a9d]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: List
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: List
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 29 common frames omitted
2020-12-12 13:40:49,460 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:40:49,460 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:40:49,461 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:40:49,972 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:40:50,056 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 83ms. Found 10 JPA repository interfaces.
2020-12-12 13:40:50,160 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:40:50,281 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:40:50,282 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:40:50,283 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:40:50,283 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:40:50,410 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:40:50,415 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:40:50,416 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 952 ms
2020-12-12 13:40:50,466 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Starting...
2020-12-12 13:40:50,475 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Start completed.
2020-12-12 13:40:50,475 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:40:50,609 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:40:50,630 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:40:50,638 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:40:50,885 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:40:50,886 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:40:50,900 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:40:50,958 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:40:51,247 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@26127b71]
2020-12-12 13:40:51,248 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:40:51,248 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:40:51,253 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:40:51,254 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:40:51,256 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:40:51,257 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:40:51,258 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:40:51,259 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:40:51,260 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [restartedMain] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:40:51,477 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:40:51,478 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Shutdown initiated...
2020-12-12 13:40:51,479 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-25 - Shutdown completed.
2020-12-12 13:40:51,480 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:40:51,488 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:40:51,489 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'visitService': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@26127b71]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1201)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.samples.petclinic.service.VisitService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@26127b71]
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:481)
	at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
	... 23 common frames omitted
Caused by: java.lang.NoClassDefFoundError: List
	at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
	at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
	at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
	at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:463)
	... 25 common frames omitted
Caused by: java.lang.ClassNotFoundException: List
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	... 29 common frames omitted
2020-12-12 13:41:19,564 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:41:19,565 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:41:19,565 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:41:20,037 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:41:20,126 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 88ms. Found 10 JPA repository interfaces.
2020-12-12 13:41:20,287 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:41:20,358 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:41:20,359 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:41:20,360 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:41:20,360 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:41:20,589 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:41:20,594 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:41:20,594 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1026 ms
2020-12-12 13:41:20,638 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-26 - Starting...
2020-12-12 13:41:20,643 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-26 - Start completed.
2020-12-12 13:41:20,643 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:41:20,841 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:41:20,866 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:41:20,876 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:41:21,275 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:41:21,276 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:41:21,288 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:41:21,357 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:41:21,866 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45e82766, org.springframework.security.web.context.SecurityContextPersistenceFilter@485cfe12, org.springframework.security.web.header.HeaderWriterFilter@6581d2e, org.springframework.security.web.csrf.CsrfFilter@78257437, org.springframework.security.web.authentication.logout.LogoutFilter@18c920c3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4febc791, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5480718b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2c0e0f57, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5416f7fb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12e1213a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c5d88f1, org.springframework.security.web.session.SessionManagementFilter@1b8bb598, org.springframework.security.web.access.ExceptionTranslationFilter@3e3f6b4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@caf9186]
2020-12-12 13:41:21,977 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:41:22,824 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:41:22,844 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:41:22,851 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:41:22,852 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.356 seconds (JVM running for 8476.656)
2020-12-12 13:41:22,854 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:41:22,855 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:41:32,852 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-110] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:41:32,856 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-110] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:41:32,859 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:41:32,878 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:41:32,879 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:41:32,880 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:41:32,881 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:41:32,881 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:41:32,882 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:41:32,884 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-110] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:41:33,087 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-110] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:41:33,088 INFO com.zaxxer.hikari.HikariDataSource [Thread-110] HikariPool-26 - Shutdown initiated...
2020-12-12 13:41:33,089 INFO com.zaxxer.hikari.HikariDataSource [Thread-110] HikariPool-26 - Shutdown completed.
2020-12-12 13:41:34,270 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:41:34,271 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:41:34,271 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:41:34,884 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:41:35,225 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 340ms. Found 10 JPA repository interfaces.
2020-12-12 13:41:35,452 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:41:35,571 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:41:35,573 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:41:35,574 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:41:35,576 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:41:35,854 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:41:35,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:41:35,869 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1595 ms
2020-12-12 13:41:36,020 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-27 - Starting...
2020-12-12 13:41:36,025 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-27 - Start completed.
2020-12-12 13:41:36,027 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:41:36,331 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:41:36,373 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:41:36,388 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:41:36,850 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:41:36,852 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:41:36,865 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:41:37,015 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:41:37,530 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58a10bee, org.springframework.security.web.context.SecurityContextPersistenceFilter@751620b0, org.springframework.security.web.header.HeaderWriterFilter@7b7c5c60, org.springframework.security.web.csrf.CsrfFilter@74120b18, org.springframework.security.web.authentication.logout.LogoutFilter@34746226, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@105a4ad1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1cb7d631, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2df3111c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51c7b7fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@48417efe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55b9fab4, org.springframework.security.web.session.SessionManagementFilter@1138a344, org.springframework.security.web.access.ExceptionTranslationFilter@2e914c84, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@58d41cda]
2020-12-12 13:41:37,614 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:41:38,337 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:41:38,386 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:41:38,402 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:41:38,404 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 4.196 seconds (JVM running for 8492.207)
2020-12-12 13:41:38,414 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:41:38,415 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:42:02,375 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 13:42:02,378 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 13:42:02,388 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 10 ms
2020-12-12 13:42:24,911 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-124] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:42:24,913 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-124] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:42:24,914 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:42:24,917 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:42:24,917 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:42:24,918 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:42:24,919 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:42:24,920 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:42:24,920 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:42:24,921 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-124] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:42:25,126 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-124] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:42:25,127 INFO com.zaxxer.hikari.HikariDataSource [Thread-124] HikariPool-27 - Shutdown initiated...
2020-12-12 13:42:25,128 INFO com.zaxxer.hikari.HikariDataSource [Thread-124] HikariPool-27 - Shutdown completed.
2020-12-12 13:42:26,413 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:42:26,413 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:42:26,414 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:42:27,194 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:42:27,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 233ms. Found 10 JPA repository interfaces.
2020-12-12 13:42:27,701 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:42:27,817 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:42:27,818 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:42:27,819 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:42:27,819 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:42:28,089 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:42:28,095 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:42:28,098 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1682 ms
2020-12-12 13:42:28,175 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-28 - Starting...
2020-12-12 13:42:28,182 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-28 - Start completed.
2020-12-12 13:42:28,182 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:42:28,461 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:42:28,531 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:42:28,543 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:42:29,086 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:42:29,089 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:42:29,099 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:42:29,195 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:42:29,588 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1936f397, org.springframework.security.web.context.SecurityContextPersistenceFilter@23a905d2, org.springframework.security.web.header.HeaderWriterFilter@9ebebb9, org.springframework.security.web.csrf.CsrfFilter@457fc53b, org.springframework.security.web.authentication.logout.LogoutFilter@2eb80d7c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40b6878c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@6e84b849, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7b064815, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f531de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5415b41a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46709e2a, org.springframework.security.web.session.SessionManagementFilter@18c45dec, org.springframework.security.web.access.ExceptionTranslationFilter@2947d24, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76197a4d]
2020-12-12 13:42:29,668 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:42:30,772 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:42:30,787 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:42:30,795 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:42:30,796 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 4.488 seconds (JVM running for 8544.6)
2020-12-12 13:42:30,798 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:42:30,799 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:42:41,034 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 13:42:41,036 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 13:42:41,041 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 5 ms
2020-12-12 13:42:41,313 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-2] Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"])]
2020-12-12 13:42:44,246 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 13:42:44,248 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 13:42:44,271 ERROR org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView [http-nio-8080-exec-2] Cannot render error page for request [/bills/random/new] and exception [Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"])] as the response has already been committed. As a result, the response may have the wrong status code.
2020-12-12 13:43:49,012 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-4] Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"]->org.springframework.samples.petclinic.model.Pet["visits"]->java.util.Collections$UnmodifiableRandomAccessList[0]->org.springframework.samples.petclinic.model.Visit["pet"])]
2020-12-12 13:43:49,069 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 13:43:49,072 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [java.lang.IllegalStateException: getOutputStream() has already been called for this response] with root cause
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:581)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:155)
	at org.apache.jasper.runtime.JspWriterImpl.initOut(JspWriterImpl.java:115)
	at org.apache.jasper.runtime.JspWriterImpl.flushBuffer(JspWriterImpl.java:108)
	at org.apache.jasper.runtime.PageContextImpl.release(PageContextImpl.java:171)
	at org.apache.jasper.runtime.JspFactoryImpl.internalReleasePageContext(JspFactoryImpl.java:120)
	at org.apache.jasper.runtime.JspFactoryImpl.releasePageContext(JspFactoryImpl.java:75)
	at org.apache.jsp.WEB_002dINF.jsp.exception_jsp._jspService(exception_jsp.java:153)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:178)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 13:43:49,295 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-129] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 13:43:49,297 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-129] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:43:49,298 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 13:43:49,300 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 13:43:49,301 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 13:43:49,302 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 13:43:49,303 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 13:43:49,304 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 13:43:49,305 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 13:43:49,306 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-129] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 13:43:49,522 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-129] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:43:49,523 INFO com.zaxxer.hikari.HikariDataSource [Thread-129] HikariPool-28 - Shutdown initiated...
2020-12-12 13:43:49,524 INFO com.zaxxer.hikari.HikariDataSource [Thread-129] HikariPool-28 - Shutdown completed.
2020-12-12 13:43:52,593 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:43:52,595 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:43:52,596 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:43:54,163 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:43:54,362 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 198ms. Found 10 JPA repository interfaces.
2020-12-12 13:43:54,526 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:43:54,615 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:43:54,616 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:43:54,617 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:43:54,618 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:43:54,856 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:43:54,880 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:43:54,880 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2274 ms
2020-12-12 13:43:54,943 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Starting...
2020-12-12 13:43:54,946 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Start completed.
2020-12-12 13:43:54,947 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:43:55,173 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:43:55,203 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:43:55,212 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:43:55,437 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
2020-12-12 13:43:55,651 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 13:43:55,652 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Shutdown initiated...
2020-12-12 13:43:55,659 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-29 - Shutdown completed.
2020-12-12 13:43:55,660 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 13:43:55,671 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 13:43:55,672 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 21 common frames omitted
Caused by: org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:123)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:77)
	at org.hibernate.metamodel.internal.MetamodelImpl.initialize(MetamodelImpl.java:181)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:305)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 25 common frames omitted
Caused by: org.hibernate.InstantiationException: could not instantiate test object : org.springframework.samples.petclinic.model.Pet
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:43)
	at org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(UnsavedValueFactory.java:68)
	at org.hibernate.tuple.PropertyFactory.buildIdentifierAttribute(PropertyFactory.java:62)
	at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:136)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:589)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:125)
	at jdk.internal.reflect.GeneratedConstructorAccessor274.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:96)
	... 33 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:40)
	... 42 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problem: 
	JsonIgnore cannot be resolved to a type

	at org.springframework.samples.petclinic.model.Pet.<init>(Pet.java:63)
	... 47 common frames omitted
2020-12-12 13:44:07,718 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 13:44:07,719 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 13:44:07,719 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 13:44:08,138 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 13:44:08,192 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53ms. Found 10 JPA repository interfaces.
2020-12-12 13:44:08,317 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 13:44:08,430 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 13:44:08,432 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 13:44:08,433 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 13:44:08,433 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 13:44:08,723 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 13:44:08,726 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 13:44:08,727 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1005 ms
2020-12-12 13:44:08,779 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-30 - Starting...
2020-12-12 13:44:08,783 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-30 - Start completed.
2020-12-12 13:44:08,783 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 13:44:09,006 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 13:44:09,031 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 13:44:09,039 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 13:44:09,342 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 13:44:09,347 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 13:44:09,357 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 13:44:09,427 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 13:44:09,814 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@572ca079, org.springframework.security.web.context.SecurityContextPersistenceFilter@37462c06, org.springframework.security.web.header.HeaderWriterFilter@2595dec6, org.springframework.security.web.csrf.CsrfFilter@63a08650, org.springframework.security.web.authentication.logout.LogoutFilter@f72cd3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6df17eca, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@34dc33a3, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7bb0cd95, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72d80c32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79308f41, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19740775, org.springframework.security.web.session.SessionManagementFilter@50b3b246, org.springframework.security.web.access.ExceptionTranslationFilter@5272f521, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@87d4b75]
2020-12-12 13:44:09,855 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 13:44:10,325 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 13:44:10,338 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 13:44:10,346 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 13:44:10,347 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.696 seconds (JVM running for 8644.151)
2020-12-12 13:44:10,349 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 13:44:10,349 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 13:48:24,320 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 13:48:24,321 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Initializing Servlet 'dispatcherServlet'
2020-12-12 13:48:24,329 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-2] Completed initialization in 8 ms
2020-12-12 14:57:21,005 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-30 housekeeper] HikariPool-30 - Thread starvation or clock leap detected (housekeeper delta=11m11s122ms520µs900ns).
2020-12-12 17:26:09,887 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-30 housekeeper] HikariPool-30 - Thread starvation or clock leap detected (housekeeper delta=1h59m48s318ms349µs501ns).
2020-12-12 17:35:07,640 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-134] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 17:35:07,653 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-134] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 17:35:07,658 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 17:35:07,712 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 17:35:07,717 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 17:35:07,721 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 17:35:07,722 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 17:35:07,723 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 17:35:07,723 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 17:35:07,724 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-134] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 17:35:07,954 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-134] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 17:35:07,955 INFO com.zaxxer.hikari.HikariDataSource [Thread-134] HikariPool-30 - Shutdown initiated...
2020-12-12 17:35:07,959 INFO com.zaxxer.hikari.HikariDataSource [Thread-134] HikariPool-30 - Shutdown completed.
2020-12-12 17:35:09,831 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 17:35:09,832 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 17:35:09,832 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 17:35:11,142 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 17:35:11,201 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 10 JPA repository interfaces.
2020-12-12 17:35:11,383 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 17:35:11,652 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 17:35:11,655 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 17:35:11,656 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 17:35:11,657 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 17:35:12,249 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 17:35:12,257 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 17:35:12,258 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2416 ms
2020-12-12 17:35:12,324 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Starting...
2020-12-12 17:35:12,328 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Start completed.
2020-12-12 17:35:12,332 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 17:35:12,657 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 17:35:12,678 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 17:35:12,691 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 17:35:12,853 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
2020-12-12 17:35:13,057 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 17:35:13,058 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Shutdown initiated...
2020-12-12 17:35:13,059 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-31 - Shutdown completed.
2020-12-12 17:35:13,060 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 17:35:13,069 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 17:35:13,070 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 21 common frames omitted
Caused by: org.hibernate.MappingException: Could not get constructor for org.hibernate.persister.entity.SingleTableEntityPersister
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:123)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:77)
	at org.hibernate.metamodel.internal.MetamodelImpl.initialize(MetamodelImpl.java:181)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:305)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1237)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 25 common frames omitted
Caused by: org.hibernate.InstantiationException: could not instantiate test object : org.springframework.samples.petclinic.model.Diagnose
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:43)
	at org.hibernate.engine.internal.UnsavedValueFactory.getUnsavedIdentifierValue(UnsavedValueFactory.java:68)
	at org.hibernate.tuple.PropertyFactory.buildIdentifierAttribute(PropertyFactory.java:62)
	at org.hibernate.tuple.entity.EntityMetamodel.<init>(EntityMetamodel.java:136)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:589)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:125)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:96)
	... 33 common frames omitted
Caused by: java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.hibernate.engine.internal.UnsavedValueFactory.instantiate(UnsavedValueFactory.java:40)
	... 43 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problem: 
	Version cannot be resolved to a type

	at org.springframework.samples.petclinic.model.BaseEntity.<init>(BaseEntity.java:37)
	at org.springframework.samples.petclinic.model.Diagnose.<init>(Diagnose.java:16)
	... 48 common frames omitted
2020-12-12 17:35:18,251 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 17:35:18,251 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 17:35:18,253 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 17:35:19,489 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 17:35:19,582 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 91ms. Found 10 JPA repository interfaces.
2020-12-12 17:35:19,732 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 17:35:19,832 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 17:35:19,832 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 17:35:19,833 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 17:35:19,833 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 17:35:20,169 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 17:35:20,176 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 17:35:20,176 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1914 ms
2020-12-12 17:35:20,225 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Starting...
2020-12-12 17:35:20,231 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Start completed.
2020-12-12 17:35:20,232 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 17:35:20,466 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 17:35:20,494 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 17:35:20,505 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 17:35:20,858 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 17:35:20,859 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 17:35:20,868 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 17:35:20,901 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
2020-12-12 17:35:21,117 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 17:35:21,118 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Shutdown initiated...
2020-12-12 17:35:21,121 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-32 - Shutdown completed.
2020-12-12 17:35:21,122 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 17:35:21,130 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 17:35:21,131 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 20 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.dml.Insert.prepare(Insert.java:319)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 36 common frames omitted
2020-12-12 17:36:07,710 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 17:36:07,711 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 17:36:07,711 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 17:36:08,818 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 17:36:08,960 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 137ms. Found 10 JPA repository interfaces.
2020-12-12 17:36:09,170 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 17:36:09,290 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 17:36:09,291 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 17:36:09,292 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 17:36:09,293 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 17:36:09,600 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 17:36:09,603 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 17:36:09,604 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1884 ms
2020-12-12 17:36:09,668 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-33 - Starting...
2020-12-12 17:36:09,683 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-33 - Start completed.
2020-12-12 17:36:09,684 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 17:36:09,955 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 17:36:10,008 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 17:36:10,019 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 17:36:10,754 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 17:36:10,758 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 17:36:10,769 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 17:36:10,776 WARN org.springframework.context.support.AbstractApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
2020-12-12 17:36:10,997 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [restartedMain] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 17:36:10,997 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-33 - Shutdown initiated...
2020-12-12 17:36:11,004 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-33 - Shutdown completed.
2020-12-12 17:36:11,005 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Stopping service [Tomcat]
2020-12-12 17:36:11,016 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [restartedMain] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-12 17:36:11,017 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.samples.petclinic.PetclinicApplication.main(PetclinicApplication.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #7 of URL [file:/C:/workspace/teaching/dp1/spring-petclinic/target/classes/db/hsqldb/data.sql]: INSERT INTO vets VALUES (1, 'James', 'Carter'); nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:626)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.runScripts(DataSourceInitializer.java:202)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializer.initSchema(DataSourceInitializer.java:119)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:91)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker.onApplicationEvent(DataSourceInitializerInvoker.java:38)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:403)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:360)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:99)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 20 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: La cantidad de columnas no coincide
Column count does not match; SQL statement:
INSERT INTO vets VALUES (1, 'James', 'Carter') [21002-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.dml.Insert.prepare(Insert.java:319)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:212)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:201)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:605)
	... 36 common frames omitted
2020-12-12 18:16:58,535 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:16:58,536 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:16:58,536 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:16:59,070 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:16:59,214 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 143ms. Found 10 JPA repository interfaces.
2020-12-12 18:16:59,350 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:16:59,411 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:16:59,412 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:16:59,413 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:16:59,413 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:16:59,557 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:16:59,561 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:16:59,561 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1018 ms
2020-12-12 18:16:59,591 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-34 - Starting...
2020-12-12 18:16:59,595 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-34 - Start completed.
2020-12-12 18:16:59,595 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:16:59,703 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:16:59,722 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:16:59,730 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:17:00,100 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:17:00,101 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:17:00,108 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:17:00,186 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:17:00,481 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e986ca8, org.springframework.security.web.context.SecurityContextPersistenceFilter@71eec2ec, org.springframework.security.web.header.HeaderWriterFilter@1c0ac20c, org.springframework.security.web.csrf.CsrfFilter@6bddbf01, org.springframework.security.web.authentication.logout.LogoutFilter@426de184, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6de01e8a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c71b7f, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@3044cb06, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@533244fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1962e636, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@496add41, org.springframework.security.web.session.SessionManagementFilter@774d4eb3, org.springframework.security.web.access.ExceptionTranslationFilter@63883ed9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ef9718]
2020-12-12 18:17:00,548 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:17:01,309 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:17:01,402 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:17:01,459 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:17:01,460 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.984 seconds (JVM running for 25015.264)
2020-12-12 18:17:01,464 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:17:01,465 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:17:27,061 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 18:17:27,062 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 18:17:27,077 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 15 ms
2020-12-12 18:26:58,614 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-7] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:27:19,126 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-5] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:27:56,498 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-142] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:27:56,604 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-142] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:27:56,605 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:27:56,608 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:27:56,610 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:27:56,610 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:27:56,616 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:27:56,617 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:27:56,620 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:27:56,620 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-142] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:27:56,826 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-142] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:27:56,827 INFO com.zaxxer.hikari.HikariDataSource [Thread-142] HikariPool-34 - Shutdown initiated...
2020-12-12 18:27:56,851 INFO com.zaxxer.hikari.HikariDataSource [Thread-142] HikariPool-34 - Shutdown completed.
2020-12-12 18:27:59,040 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:27:59,041 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:27:59,042 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:27:59,722 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:27:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 71ms. Found 10 JPA repository interfaces.
2020-12-12 18:27:59,935 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:28:00,011 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:28:00,012 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:28:00,016 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:28:00,016 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:28:00,409 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:28:00,412 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:28:00,416 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1363 ms
2020-12-12 18:28:00,509 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-35 - Starting...
2020-12-12 18:28:00,512 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-35 - Start completed.
2020-12-12 18:28:00,513 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:28:00,668 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:28:00,689 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:28:00,695 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:28:01,006 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:28:01,007 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:28:01,015 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:28:01,069 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:28:01,410 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51914da0, org.springframework.security.web.context.SecurityContextPersistenceFilter@710437e5, org.springframework.security.web.header.HeaderWriterFilter@6685ec41, org.springframework.security.web.csrf.CsrfFilter@2372626, org.springframework.security.web.authentication.logout.LogoutFilter@2508bbe9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9c60585, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@250703c5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@27c1e36b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fe7ea69, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26c9e430, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ca6f96a, org.springframework.security.web.session.SessionManagementFilter@4a392e92, org.springframework.security.web.access.ExceptionTranslationFilter@57093e82, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cfca6b]
2020-12-12 18:28:01,516 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:28:02,069 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:28:02,110 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:28:02,118 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:28:02,119 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.181 seconds (JVM running for 25675.922)
2020-12-12 18:28:02,121 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:28:02,121 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:28:05,033 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 18:28:05,040 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 18:28:05,044 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 4 ms
2020-12-12 18:28:28,322 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-6] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:29:07,349 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:29:53,460 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-156] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:29:53,462 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-156] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:29:53,463 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:29:53,468 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:29:53,469 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:29:53,470 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:29:53,471 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:29:53,471 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:29:53,472 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:29:53,473 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-156] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:29:53,683 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-156] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:29:53,683 INFO com.zaxxer.hikari.HikariDataSource [Thread-156] HikariPool-35 - Shutdown initiated...
2020-12-12 18:29:53,685 INFO com.zaxxer.hikari.HikariDataSource [Thread-156] HikariPool-35 - Shutdown completed.
2020-12-12 18:29:54,851 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:29:54,852 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:29:54,853 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:29:55,549 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:29:55,674 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 125ms. Found 10 JPA repository interfaces.
2020-12-12 18:29:55,811 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:29:56,024 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:29:56,025 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:29:56,025 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:29:56,026 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:29:56,276 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:29:56,279 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:29:56,279 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1422 ms
2020-12-12 18:29:56,308 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-36 - Starting...
2020-12-12 18:29:56,310 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-36 - Start completed.
2020-12-12 18:29:56,310 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:29:56,431 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:29:56,510 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:29:56,518 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:29:56,801 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:29:56,802 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:29:56,809 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:29:56,863 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:29:57,151 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2daf9b03, org.springframework.security.web.context.SecurityContextPersistenceFilter@27cf3f81, org.springframework.security.web.header.HeaderWriterFilter@67d7ab21, org.springframework.security.web.csrf.CsrfFilter@18ea1372, org.springframework.security.web.authentication.logout.LogoutFilter@10bcd3b2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@38b455eb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@59765357, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@173d43a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a89b721, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@dd81f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10de9039, org.springframework.security.web.session.SessionManagementFilter@6f76d09e, org.springframework.security.web.access.ExceptionTranslationFilter@7f80476e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51cad5cc]
2020-12-12 18:29:57,273 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:29:58,034 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:29:58,058 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:29:58,078 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:29:58,079 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.313 seconds (JVM running for 25791.883)
2020-12-12 18:29:58,081 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:29:58,081 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:29:58,270 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 18:29:58,273 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 18:29:58,280 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 6 ms
2020-12-12 18:29:58,388 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:30:02,795 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction]
2020-12-12 18:31:26,841 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-161] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:31:26,843 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-161] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:31:26,844 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:31:26,876 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:31:26,877 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:31:26,879 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:31:26,880 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:31:26,882 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:31:26,883 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:31:26,884 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-161] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:31:27,103 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-161] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:31:27,104 INFO com.zaxxer.hikari.HikariDataSource [Thread-161] HikariPool-36 - Shutdown initiated...
2020-12-12 18:31:27,105 INFO com.zaxxer.hikari.HikariDataSource [Thread-161] HikariPool-36 - Shutdown completed.
2020-12-12 18:31:28,183 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:31:28,184 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:31:28,184 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:31:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:31:28,697 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 68ms. Found 10 JPA repository interfaces.
2020-12-12 18:31:28,856 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:31:28,924 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:31:28,925 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:31:28,925 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:31:28,926 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:31:29,059 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:31:29,064 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:31:29,065 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 877 ms
2020-12-12 18:31:29,094 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-37 - Starting...
2020-12-12 18:31:29,097 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-37 - Start completed.
2020-12-12 18:31:29,098 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:31:29,303 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:31:29,323 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:31:29,335 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:31:29,639 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:31:29,640 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:31:29,647 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:31:29,697 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:31:29,939 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34be5865, org.springframework.security.web.context.SecurityContextPersistenceFilter@2562f7ed, org.springframework.security.web.header.HeaderWriterFilter@400bac17, org.springframework.security.web.csrf.CsrfFilter@7b970f93, org.springframework.security.web.authentication.logout.LogoutFilter@51e6e0ef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@43ab167, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@89e9230, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@23c4242b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27298aba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3a5ff15c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39ea03d0, org.springframework.security.web.session.SessionManagementFilter@66ca9730, org.springframework.security.web.access.ExceptionTranslationFilter@590b785b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f88b794]
2020-12-12 18:31:29,981 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:31:30,468 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:31:30,489 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:31:30,500 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:31:30,502 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.39 seconds (JVM running for 25884.306)
2020-12-12 18:31:30,507 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:31:30,507 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:31:35,712 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 18:31:35,713 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 18:31:35,716 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 3 ms
2020-12-12 18:34:34,032 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-166] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:34:34,034 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-166] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:34:34,036 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:34:34,041 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:34:34,044 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:34:34,046 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:34:34,048 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:34:34,050 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:34:34,051 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:34:34,054 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-166] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:34:34,272 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-166] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:34:34,273 INFO com.zaxxer.hikari.HikariDataSource [Thread-166] HikariPool-37 - Shutdown initiated...
2020-12-12 18:34:34,277 INFO com.zaxxer.hikari.HikariDataSource [Thread-166] HikariPool-37 - Shutdown completed.
2020-12-12 18:34:35,587 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:34:35,589 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:34:35,589 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:34:36,134 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:34:36,299 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 165ms. Found 10 JPA repository interfaces.
2020-12-12 18:34:36,409 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:34:36,466 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:34:36,467 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:34:36,468 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:34:36,468 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:34:36,600 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:34:36,606 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:34:36,607 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1015 ms
2020-12-12 18:34:36,656 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-38 - Starting...
2020-12-12 18:34:36,659 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-38 - Start completed.
2020-12-12 18:34:36,660 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:34:36,890 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:34:36,930 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:34:36,939 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:34:37,342 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:34:37,343 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:34:37,354 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:34:37,448 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:34:37,801 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6223249b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4de1a701, org.springframework.security.web.header.HeaderWriterFilter@53a24c38, org.springframework.security.web.csrf.CsrfFilter@5bb198cc, org.springframework.security.web.authentication.logout.LogoutFilter@5541cbe2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@a627dde, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2dc3e3c9, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5143fd7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7f48fd63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e4abd3e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@555a1e53, org.springframework.security.web.session.SessionManagementFilter@1ac13b6d, org.springframework.security.web.access.ExceptionTranslationFilter@495f6886, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76fe4c65]
2020-12-12 18:34:37,866 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:34:38,307 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:34:38,328 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:34:38,342 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:34:38,343 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.822 seconds (JVM running for 26072.147)
2020-12-12 18:34:38,345 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:34:38,345 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:34:46,172 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-171] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:34:46,176 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-171] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:34:46,177 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:34:46,180 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:34:46,183 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:34:46,186 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:34:46,188 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:34:46,189 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:34:46,191 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:34:46,194 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-171] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:34:46,413 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-171] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:34:46,414 INFO com.zaxxer.hikari.HikariDataSource [Thread-171] HikariPool-38 - Shutdown initiated...
2020-12-12 18:34:46,416 INFO com.zaxxer.hikari.HikariDataSource [Thread-171] HikariPool-38 - Shutdown completed.
2020-12-12 18:34:47,436 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:34:47,437 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:34:47,438 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:34:47,839 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:34:47,909 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69ms. Found 10 JPA repository interfaces.
2020-12-12 18:34:48,018 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:34:48,086 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:34:48,087 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:34:48,087 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:34:48,088 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:34:48,245 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:34:48,249 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:34:48,250 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 808 ms
2020-12-12 18:34:48,297 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-39 - Starting...
2020-12-12 18:34:48,300 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-39 - Start completed.
2020-12-12 18:34:48,301 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:34:48,558 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:34:48,583 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:34:48,590 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:34:48,946 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:34:48,947 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:34:48,956 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:34:49,026 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:34:49,331 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c18cc2a, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ea84474, org.springframework.security.web.header.HeaderWriterFilter@4e188dc3, org.springframework.security.web.csrf.CsrfFilter@29d48b9f, org.springframework.security.web.authentication.logout.LogoutFilter@600a6384, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@554f4a28, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5a49ced3, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2d6bff92, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e091f66, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f5edf1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21d967b, org.springframework.security.web.session.SessionManagementFilter@332da9fd, org.springframework.security.web.access.ExceptionTranslationFilter@78f90d1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e363df1]
2020-12-12 18:34:49,379 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:34:49,963 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:34:49,986 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:34:49,992 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:34:49,993 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.612 seconds (JVM running for 26083.797)
2020-12-12 18:34:49,995 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:34:49,995 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:35:08,581 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 18:35:08,587 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 18:35:08,600 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 13 ms
2020-12-12 18:41:17,962 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-176] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:41:17,964 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-176] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:41:17,965 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:41:17,967 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:41:17,968 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:41:17,969 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:41:17,970 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:41:17,971 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:41:17,971 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:41:17,972 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-176] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:41:18,179 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-176] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:41:18,179 INFO com.zaxxer.hikari.HikariDataSource [Thread-176] HikariPool-39 - Shutdown initiated...
2020-12-12 18:41:18,180 INFO com.zaxxer.hikari.HikariDataSource [Thread-176] HikariPool-39 - Shutdown completed.
2020-12-12 18:41:20,074 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:41:20,075 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:41:20,075 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:41:20,563 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:41:20,613 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 49ms. Found 10 JPA repository interfaces.
2020-12-12 18:41:20,727 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:41:20,788 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:41:20,789 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:41:20,791 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:41:20,791 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:41:20,908 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:41:20,911 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:41:20,912 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 834 ms
2020-12-12 18:41:20,943 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-40 - Starting...
2020-12-12 18:41:20,948 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-40 - Start completed.
2020-12-12 18:41:20,948 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:41:21,073 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:41:21,110 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:41:21,117 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:41:21,482 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:41:21,482 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:41:21,496 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:41:21,555 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:41:21,738 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1aea716b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7efa853, org.springframework.security.web.header.HeaderWriterFilter@5633ccc9, org.springframework.security.web.csrf.CsrfFilter@1cc59073, org.springframework.security.web.authentication.logout.LogoutFilter@7ffff11d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6ac3dd76, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1d1c566b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@62fca736, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2d66a956, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65fb7db7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69e4bd66, org.springframework.security.web.session.SessionManagementFilter@3719f0cb, org.springframework.security.web.access.ExceptionTranslationFilter@2131725a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71bf459a]
2020-12-12 18:41:21,784 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:41:22,192 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:41:22,221 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:41:22,230 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:41:22,232 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.208 seconds (JVM running for 26476.035)
2020-12-12 18:41:22,234 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:41:22,235 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:44:53,142 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-181] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:44:53,145 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-181] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:44:53,146 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:44:53,148 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:44:53,149 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:44:53,150 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:44:53,150 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:44:53,151 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:44:53,151 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:44:53,152 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-181] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:44:53,356 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-181] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:44:53,357 INFO com.zaxxer.hikari.HikariDataSource [Thread-181] HikariPool-40 - Shutdown initiated...
2020-12-12 18:44:53,358 INFO com.zaxxer.hikari.HikariDataSource [Thread-181] HikariPool-40 - Shutdown completed.
2020-12-12 18:44:54,447 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:44:54,447 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:44:54,448 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:44:54,846 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:44:54,912 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 10 JPA repository interfaces.
2020-12-12 18:44:55,028 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:44:55,147 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:44:55,147 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:44:55,150 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:44:55,151 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:44:55,261 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:44:55,264 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:44:55,265 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 812 ms
2020-12-12 18:44:55,292 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-41 - Starting...
2020-12-12 18:44:55,294 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-41 - Start completed.
2020-12-12 18:44:55,294 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:44:55,428 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:44:55,452 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:44:55,463 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:44:55,888 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:44:55,889 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:44:55,896 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:44:55,944 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:44:56,178 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70ed6f40, org.springframework.security.web.context.SecurityContextPersistenceFilter@3198ddee, org.springframework.security.web.header.HeaderWriterFilter@2154dde6, org.springframework.security.web.csrf.CsrfFilter@4ab1536c, org.springframework.security.web.authentication.logout.LogoutFilter@178d65bc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5e1bbd3c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@633d5c2b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7da67134, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c00e6a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fc5819, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e6160e9, org.springframework.security.web.session.SessionManagementFilter@7172ca9f, org.springframework.security.web.access.ExceptionTranslationFilter@596ef98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d41d2a3]
2020-12-12 18:44:56,272 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:44:56,998 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:44:57,010 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:44:57,019 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:44:57,020 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.636 seconds (JVM running for 26690.824)
2020-12-12 18:44:57,022 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:44:57,022 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:45:37,501 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-186] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:45:37,503 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-186] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:45:37,503 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:45:37,505 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:45:37,506 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:45:37,507 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:45:37,507 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:45:37,507 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:45:37,508 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:45:37,508 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-186] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:45:37,716 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-186] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:45:37,717 INFO com.zaxxer.hikari.HikariDataSource [Thread-186] HikariPool-41 - Shutdown initiated...
2020-12-12 18:45:37,721 INFO com.zaxxer.hikari.HikariDataSource [Thread-186] HikariPool-41 - Shutdown completed.
2020-12-12 18:45:38,839 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:45:38,840 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:45:38,841 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:45:39,206 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:45:39,276 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 69ms. Found 10 JPA repository interfaces.
2020-12-12 18:45:39,432 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:45:39,539 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:45:39,543 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:45:39,544 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:45:39,544 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:45:39,638 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:45:39,642 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:45:39,642 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 796 ms
2020-12-12 18:45:39,677 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-42 - Starting...
2020-12-12 18:45:39,683 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-42 - Start completed.
2020-12-12 18:45:39,692 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:45:39,794 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:45:39,813 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:45:39,820 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:45:40,097 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:45:40,099 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:45:40,105 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:45:40,158 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:45:40,373 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11804044, org.springframework.security.web.context.SecurityContextPersistenceFilter@774d38a3, org.springframework.security.web.header.HeaderWriterFilter@415fd945, org.springframework.security.web.csrf.CsrfFilter@9652820, org.springframework.security.web.authentication.logout.LogoutFilter@49c66668, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6fa6e244, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2d412285, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7500d2c1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ccec4b8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e4b195, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2efa7e27, org.springframework.security.web.session.SessionManagementFilter@57493e42, org.springframework.security.web.access.ExceptionTranslationFilter@212b4a78, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2fb2b45]
2020-12-12 18:45:40,411 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:45:40,885 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:45:40,904 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:45:40,913 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:45:40,914 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.14 seconds (JVM running for 26734.718)
2020-12-12 18:45:40,916 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:45:40,917 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:45:57,572 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-191] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:45:57,578 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-191] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:45:57,579 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:45:57,583 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:45:57,588 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:45:57,590 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:45:57,593 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:45:57,596 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:45:57,596 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:45:57,601 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-191] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:45:57,818 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-191] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:45:57,818 INFO com.zaxxer.hikari.HikariDataSource [Thread-191] HikariPool-42 - Shutdown initiated...
2020-12-12 18:45:57,820 INFO com.zaxxer.hikari.HikariDataSource [Thread-191] HikariPool-42 - Shutdown completed.
2020-12-12 18:45:58,933 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:45:58,933 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:45:58,934 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:45:59,303 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:45:59,371 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 67ms. Found 10 JPA repository interfaces.
2020-12-12 18:45:59,498 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:45:59,560 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:45:59,562 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:45:59,563 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:45:59,564 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:45:59,684 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:45:59,688 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:45:59,688 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 752 ms
2020-12-12 18:45:59,720 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-43 - Starting...
2020-12-12 18:45:59,725 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-43 - Start completed.
2020-12-12 18:45:59,726 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:46:00,020 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:46:00,131 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:46:00,149 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:46:00,528 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:46:00,529 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:46:00,535 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:46:00,612 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:46:00,803 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d382eda, org.springframework.security.web.context.SecurityContextPersistenceFilter@76a60e66, org.springframework.security.web.header.HeaderWriterFilter@431c9fe2, org.springframework.security.web.csrf.CsrfFilter@2b7309cc, org.springframework.security.web.authentication.logout.LogoutFilter@135e1886, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1cdea214, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c269416, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@158f4b1c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6cdea587, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b9ad471, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@668de766, org.springframework.security.web.session.SessionManagementFilter@45284266, org.springframework.security.web.access.ExceptionTranslationFilter@5459d772, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@188d6f84]
2020-12-12 18:46:00,852 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:46:01,454 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:46:01,467 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:46:01,474 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:46:01,474 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.6 seconds (JVM running for 26755.278)
2020-12-12 18:46:01,476 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:46:01,477 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:46:21,375 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-196] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:46:21,379 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-196] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:46:21,380 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:46:21,384 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:46:21,386 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:46:21,387 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:46:21,388 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:46:21,390 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:46:21,392 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:46:21,395 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-196] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:46:21,624 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-196] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:46:21,625 INFO com.zaxxer.hikari.HikariDataSource [Thread-196] HikariPool-43 - Shutdown initiated...
2020-12-12 18:46:21,626 INFO com.zaxxer.hikari.HikariDataSource [Thread-196] HikariPool-43 - Shutdown completed.
2020-12-12 18:46:22,961 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:46:22,961 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:46:22,962 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:46:23,376 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:46:23,432 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 54ms. Found 10 JPA repository interfaces.
2020-12-12 18:46:23,547 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:46:23,604 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:46:23,605 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:46:23,605 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:46:23,605 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:46:23,724 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:46:23,730 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:46:23,730 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 758 ms
2020-12-12 18:46:23,761 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-44 - Starting...
2020-12-12 18:46:23,763 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-44 - Start completed.
2020-12-12 18:46:23,764 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:46:23,888 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:46:23,907 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:46:23,914 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:46:24,488 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:46:24,489 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:46:24,499 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:46:24,589 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:46:24,905 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d74f00f, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d6d353d, org.springframework.security.web.header.HeaderWriterFilter@464e083a, org.springframework.security.web.csrf.CsrfFilter@66105627, org.springframework.security.web.authentication.logout.LogoutFilter@36528fc1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@574535e7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@12fce866, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@64eeeb66, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1af956ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2cc08252, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ab5a0f3, org.springframework.security.web.session.SessionManagementFilter@79a8e541, org.springframework.security.web.access.ExceptionTranslationFilter@5b0b831c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2045c21a]
2020-12-12 18:46:24,992 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:46:25,868 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:46:25,892 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:46:25,904 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:46:25,906 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 3.019 seconds (JVM running for 26779.709)
2020-12-12 18:46:25,910 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:46:25,911 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 18:58:32,062 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-201] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 18:58:32,070 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-201] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:58:32,071 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 18:58:32,081 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 18:58:32,083 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 18:58:32,085 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 18:58:32,085 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 18:58:32,087 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 18:58:32,087 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 18:58:32,089 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-201] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 18:58:32,362 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-201] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 18:58:32,363 INFO com.zaxxer.hikari.HikariDataSource [Thread-201] HikariPool-44 - Shutdown initiated...
2020-12-12 18:58:32,365 INFO com.zaxxer.hikari.HikariDataSource [Thread-201] HikariPool-44 - Shutdown completed.
2020-12-12 18:58:33,456 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 18:58:33,457 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 18:58:33,457 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 18:58:33,845 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 18:58:33,896 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 49ms. Found 10 JPA repository interfaces.
2020-12-12 18:58:33,995 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 18:58:34,127 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 18:58:34,128 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 18:58:34,128 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 18:58:34,129 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 18:58:34,361 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 18:58:34,365 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 18:58:34,366 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 907 ms
2020-12-12 18:58:34,407 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-45 - Starting...
2020-12-12 18:58:34,411 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-45 - Start completed.
2020-12-12 18:58:34,411 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 18:58:34,679 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 18:58:34,702 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 18:58:34,718 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 18:58:35,005 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 18:58:35,006 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 18:58:35,014 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 18:58:35,187 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 18:58:35,551 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16553041, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e7675d8, org.springframework.security.web.header.HeaderWriterFilter@49acb869, org.springframework.security.web.csrf.CsrfFilter@1a9c0376, org.springframework.security.web.authentication.logout.LogoutFilter@36ca3e12, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@791e426a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@71abcf4d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1d68f501, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@533139eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f72bc14, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29ca6c14, org.springframework.security.web.session.SessionManagementFilter@548b5b8c, org.springframework.security.web.access.ExceptionTranslationFilter@49a6939e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d733ca4]
2020-12-12 18:58:35,606 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 18:58:36,333 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 18:58:36,365 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 18:58:36,376 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 18:58:36,377 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.962 seconds (JVM running for 27510.181)
2020-12-12 18:58:36,379 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 18:58:36,380 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:03:21,999 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-206] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:03:22,003 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-206] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:03:22,004 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:03:22,008 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:03:22,010 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:03:22,012 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:03:22,013 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:03:22,014 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:03:22,014 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:03:22,015 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-206] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:03:22,227 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-206] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:03:22,227 INFO com.zaxxer.hikari.HikariDataSource [Thread-206] HikariPool-45 - Shutdown initiated...
2020-12-12 19:03:22,229 INFO com.zaxxer.hikari.HikariDataSource [Thread-206] HikariPool-45 - Shutdown completed.
2020-12-12 19:03:23,720 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 12908 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:03:23,720 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:03:23,720 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:03:24,155 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:03:24,218 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 63ms. Found 10 JPA repository interfaces.
2020-12-12 19:03:24,374 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:03:24,471 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:03:24,471 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:03:24,472 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:03:24,472 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:03:24,603 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:03:24,606 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:03:24,607 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 884 ms
2020-12-12 19:03:24,648 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-46 - Starting...
2020-12-12 19:03:24,650 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-46 - Start completed.
2020-12-12 19:03:24,651 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:03:24,767 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:03:24,876 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:03:24,893 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:03:25,602 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:03:25,603 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:03:25,611 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:03:25,674 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:03:25,990 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5247c5c6, org.springframework.security.web.context.SecurityContextPersistenceFilter@4466760, org.springframework.security.web.header.HeaderWriterFilter@2d5ad95f, org.springframework.security.web.csrf.CsrfFilter@60ec936f, org.springframework.security.web.authentication.logout.LogoutFilter@264e9007, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@44be7635, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@20568cf2, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@fe1881c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7478a378, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f930c89, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24239888, org.springframework.security.web.session.SessionManagementFilter@b5ebf2, org.springframework.security.web.access.ExceptionTranslationFilter@261ada9a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@44ade880]
2020-12-12 19:03:26,034 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:03:26,536 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:03:26,600 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:03:26,675 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:03:26,677 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 2.996 seconds (JVM running for 27800.481)
2020-12-12 19:03:26,693 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:03:26,693 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:03:41,576 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:03:41,578 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:03:41,584 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 5 ms
2020-12-12 19:05:03,182 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:05:03,196 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:05:03,197 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:05:03,367 INFO org.springframework.boot.logging.DeferredLog [restartedMain] The Class-Path manifest attribute in C:\Users\japar\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/japar/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-12-12 19:05:03,368 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-12-12 19:05:03,369 INFO org.springframework.boot.logging.DeferredLog [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-12-12 19:05:07,076 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:05:07,365 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 241ms. Found 10 JPA repository interfaces.
2020-12-12 19:05:08,670 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:05:10,140 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:05:10,167 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:05:10,169 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:05:10,171 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:05:10,825 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:05:10,852 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:05:10,856 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 7486 ms
2020-12-12 19:05:11,168 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2020-12-12 19:05:11,668 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2020-12-12 19:05:11,681 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:05:12,353 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:05:12,573 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate Core {5.4.10.Final}
2020-12-12 19:05:12,973 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [restartedMain] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-12-12 19:05:13,296 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:05:13,515 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:05:17,174 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:05:17,195 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:05:17,293 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:05:17,647 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:05:19,415 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59267e72, org.springframework.security.web.context.SecurityContextPersistenceFilter@6cde6c6a, org.springframework.security.web.header.HeaderWriterFilter@468e8bfc, org.springframework.security.web.csrf.CsrfFilter@302119bb, org.springframework.security.web.authentication.logout.LogoutFilter@3995a985, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f2fa4d0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2d1267f2, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5bc1d523, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69bd7f4c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17ca3f03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d37081, org.springframework.security.web.session.SessionManagementFilter@1aebed41, org.springframework.security.web.access.ExceptionTranslationFilter@6ab1e308, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@452b8f04]
2020-12-12 19:05:19,698 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:05:21,787 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:05:21,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:05:22,011 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:05:22,020 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 19.956 seconds (JVM running for 23.604)
2020-12-12 19:05:22,183 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:11:43,659 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:11:43,663 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:11:43,697 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 34 ms
2020-12-12 19:11:44,537 WARN org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [752] milliseconds.
2020-12-12 19:11:50,532 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m38s643ms314µs300ns).
2020-12-12 19:13:50,391 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-4] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:13:50,419 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-4] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:13:50,425 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:13:50,483 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:13:50,487 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:13:50,489 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:13:50,490 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:13:50,495 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:13:50,496 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:13:50,499 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-4] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:13:50,733 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-4] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:13:50,734 INFO com.zaxxer.hikari.HikariDataSource [Thread-4] HikariPool-1 - Shutdown initiated...
2020-12-12 19:13:50,753 INFO com.zaxxer.hikari.HikariDataSource [Thread-4] HikariPool-1 - Shutdown completed.
2020-12-12 19:13:59,530 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:13:59,532 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:13:59,533 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:14:01,086 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:14:01,240 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 152ms. Found 10 JPA repository interfaces.
2020-12-12 19:14:01,727 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:14:01,862 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:14:01,864 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:14:01,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:14:01,866 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:14:02,185 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:14:02,192 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:14:02,193 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2649 ms
2020-12-12 19:14:02,282 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Starting...
2020-12-12 19:14:02,289 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-2 - Start completed.
2020-12-12 19:14:02,290 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:14:02,625 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:14:02,663 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:14:02,678 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:14:03,419 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:14:03,420 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:14:03,435 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:14:03,998 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:14:07,025 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@634acf38, org.springframework.security.web.context.SecurityContextPersistenceFilter@4594a1b8, org.springframework.security.web.header.HeaderWriterFilter@8a86f98, org.springframework.security.web.csrf.CsrfFilter@369d235f, org.springframework.security.web.authentication.logout.LogoutFilter@7832c6dd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@544458b3, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2a68dff0, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@46c9e1ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cb5c497, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57aaac36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68b6dc65, org.springframework.security.web.session.SessionManagementFilter@1a4cee75, org.springframework.security.web.access.ExceptionTranslationFilter@7f54c598, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29f0f432]
2020-12-12 19:14:07,173 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:14:10,200 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:14:10,247 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:14:10,277 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:14:10,280 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 10.889 seconds (JVM running for 551.864)
2020-12-12 19:14:10,293 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:14:10,295 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:14:48,992 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-9] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:14:49,005 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-9] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:14:49,010 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:14:49,045 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:14:49,053 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:14:49,056 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:14:49,057 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:14:49,060 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:14:49,061 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:14:49,065 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-9] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:14:49,313 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-9] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:14:49,314 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown initiated...
2020-12-12 19:14:49,323 INFO com.zaxxer.hikari.HikariDataSource [Thread-9] HikariPool-2 - Shutdown completed.
2020-12-12 19:14:51,022 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:14:51,023 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:14:51,024 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:14:53,550 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:14:53,714 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 161ms. Found 10 JPA repository interfaces.
2020-12-12 19:14:54,101 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:14:54,252 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:14:54,254 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:14:54,258 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:14:54,266 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:14:54,583 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:14:54,594 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:14:54,595 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 3549 ms
2020-12-12 19:14:54,675 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Starting...
2020-12-12 19:14:54,682 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-3 - Start completed.
2020-12-12 19:14:54,683 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:14:54,992 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:14:55,029 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:14:55,159 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:14:56,107 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:14:56,108 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:14:56,118 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:14:56,205 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:14:56,699 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@353eb10a, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ec895d0, org.springframework.security.web.header.HeaderWriterFilter@289df047, org.springframework.security.web.csrf.CsrfFilter@500b6e56, org.springframework.security.web.authentication.logout.LogoutFilter@720a596d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52777ee4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@19f4681c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2bf7af74, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a5564c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d0da60c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34e71e46, org.springframework.security.web.session.SessionManagementFilter@25ba26ef, org.springframework.security.web.access.ExceptionTranslationFilter@203495bd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b9093e7]
2020-12-12 19:14:56,842 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:14:59,033 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:14:59,064 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:14:59,083 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:14:59,085 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 8.45 seconds (JVM running for 600.669)
2020-12-12 19:14:59,091 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:14:59,093 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:15:13,041 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-15] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:15:13,069 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-15] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:15:13,070 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:15:13,234 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:15:13,238 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:15:13,242 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:15:13,244 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:15:13,271 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:15:13,272 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:15:13,382 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-15] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:15:13,652 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-15] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:15:13,653 INFO com.zaxxer.hikari.HikariDataSource [Thread-15] HikariPool-3 - Shutdown initiated...
2020-12-12 19:15:13,659 INFO com.zaxxer.hikari.HikariDataSource [Thread-15] HikariPool-3 - Shutdown completed.
2020-12-12 19:15:15,048 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:15:15,049 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:15:15,050 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:15:16,659 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:15:16,751 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 91ms. Found 10 JPA repository interfaces.
2020-12-12 19:15:16,990 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:15:17,144 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:15:17,145 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:15:17,147 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:15:17,147 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:15:17,492 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:15:17,500 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:15:17,501 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2390 ms
2020-12-12 19:15:17,574 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Starting...
2020-12-12 19:15:17,579 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-4 - Start completed.
2020-12-12 19:15:17,580 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:15:17,809 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:15:17,894 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:15:17,920 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:15:18,637 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:15:18,639 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:15:18,655 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:15:18,754 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:15:19,158 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61e130, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c0d3ba8, org.springframework.security.web.header.HeaderWriterFilter@5ef17ce1, org.springframework.security.web.csrf.CsrfFilter@3485ad31, org.springframework.security.web.authentication.logout.LogoutFilter@78ac800, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76173cb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2f25933e, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6582f49b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@68cca370, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d0fdcfc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23ed8fee, org.springframework.security.web.session.SessionManagementFilter@5578e813, org.springframework.security.web.access.ExceptionTranslationFilter@20809cad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@a19960b]
2020-12-12 19:15:19,236 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:15:20,873 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:15:20,916 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:15:20,930 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:15:20,942 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 6.069 seconds (JVM running for 622.526)
2020-12-12 19:15:20,954 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:15:20,956 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:15:21,724 ERROR org.springframework.web.servlet.HandlerExecutionChain [http-nio-8080-exec-3] HandlerInterceptor.afterCompletion threw exception
java.lang.NullPointerException: null
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.stopLongTaskTimers(LongTaskTimingHandlerInterceptor.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.afterCompletion(LongTaskTimingHandlerInterceptor.java:79)
	at org.springframework.web.servlet.HandlerExecutionChain.triggerAfterCompletion(HandlerExecutionChain.java:179)
	at org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletion(DispatcherServlet.java:1427)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:141)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:15:21,741 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at io.micrometer.core.instrument.ImmutableTag.<init>(ImmutableTag.java:35)
	at io.micrometer.core.instrument.Tag.of(Tag.java:29)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.method(WebMvcTags.java:74)
	at org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider.getTags(DefaultWebMvcTagsProvider.java:46)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.getTimer(WebMvcMetricsFilter.java:181)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.record(WebMvcMetricsFilter.java:143)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:120)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:15:21,751 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Error processing request
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:412)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:15:21,753 WARN org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Exception while attempting to add an entry to the access log
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.log(CoyoteAdapter.java:490)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:15:32,786 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:15:32,786 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:15:32,796 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 9 ms
2020-12-12 19:17:38,680 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-20] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:17:38,690 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-20] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:17:38,692 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:17:38,723 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:17:38,726 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:17:38,729 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:17:38,731 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:17:38,734 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:17:38,736 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:17:38,739 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-20] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:17:38,964 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-20] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:17:38,965 INFO com.zaxxer.hikari.HikariDataSource [Thread-20] HikariPool-4 - Shutdown initiated...
2020-12-12 19:17:38,973 INFO com.zaxxer.hikari.HikariDataSource [Thread-20] HikariPool-4 - Shutdown completed.
2020-12-12 19:17:47,379 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:17:47,381 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:17:47,381 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:17:48,597 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:17:48,683 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 85ms. Found 10 JPA repository interfaces.
2020-12-12 19:17:48,853 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:17:48,937 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:17:48,938 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:17:48,942 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:17:48,942 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:17:49,188 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:17:49,193 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:17:49,196 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1806 ms
2020-12-12 19:17:49,278 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Starting...
2020-12-12 19:17:49,290 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-5 - Start completed.
2020-12-12 19:17:49,291 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:17:49,489 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:17:49,519 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:17:49,535 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:17:50,424 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:17:50,428 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:17:50,440 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:17:50,582 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:17:51,027 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@484ac2fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@26189fb8, org.springframework.security.web.header.HeaderWriterFilter@68f2cc09, org.springframework.security.web.csrf.CsrfFilter@45fa254d, org.springframework.security.web.authentication.logout.LogoutFilter@434a69ea, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49e8265, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@39b45c27, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@438faa59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15f1a218, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b1db62b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d57c331, org.springframework.security.web.session.SessionManagementFilter@325c04f3, org.springframework.security.web.access.ExceptionTranslationFilter@24c2f310, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f1837de]
2020-12-12 19:17:51,104 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:17:52,806 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:17:52,839 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:17:52,849 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:17:52,850 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 5.566 seconds (JVM running for 774.434)
2020-12-12 19:17:52,855 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:17:52,856 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:19:36,460 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:19:36,462 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:19:36,475 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 13 ms
2020-12-12 19:20:34,860 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-25] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:20:34,863 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-25] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:20:34,865 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:20:34,879 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:20:34,882 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:20:34,884 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:20:34,885 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:20:34,887 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:20:34,890 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:20:34,893 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-25] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:20:35,109 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-25] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:20:35,110 INFO com.zaxxer.hikari.HikariDataSource [Thread-25] HikariPool-5 - Shutdown initiated...
2020-12-12 19:20:35,114 INFO com.zaxxer.hikari.HikariDataSource [Thread-25] HikariPool-5 - Shutdown completed.
2020-12-12 19:20:36,200 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:20:36,201 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:20:36,201 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:20:37,256 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:20:37,348 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 91ms. Found 10 JPA repository interfaces.
2020-12-12 19:20:37,507 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:20:37,583 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:20:37,588 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:20:37,589 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:20:37,590 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:20:37,865 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:20:37,872 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:20:37,872 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1656 ms
2020-12-12 19:20:37,962 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Starting...
2020-12-12 19:20:37,973 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-6 - Start completed.
2020-12-12 19:20:37,973 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:20:38,139 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:20:38,172 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:20:38,187 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:20:39,058 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:20:39,059 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:20:39,068 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:20:39,145 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:20:39,750 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14d2ad92, org.springframework.security.web.context.SecurityContextPersistenceFilter@604aa6ca, org.springframework.security.web.header.HeaderWriterFilter@65576ce6, org.springframework.security.web.csrf.CsrfFilter@4dcdc899, org.springframework.security.web.authentication.logout.LogoutFilter@696717cb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7886a57a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@d5d70cc, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@7a1504f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11a8115b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f467fd4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4598f40c, org.springframework.security.web.session.SessionManagementFilter@4360373f, org.springframework.security.web.access.ExceptionTranslationFilter@44d6a8b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7099f565]
2020-12-12 19:20:39,856 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:20:41,642 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:20:41,701 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:20:41,713 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:20:41,715 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 5.6 seconds (JVM running for 943.3)
2020-12-12 19:20:41,719 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:20:41,719 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:20:53,641 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:20:53,644 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:20:53,651 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 6 ms
2020-12-12 19:21:05,121 ERROR org.springframework.web.servlet.HandlerExecutionChain [http-nio-8080-exec-3] HandlerInterceptor.afterCompletion threw exception
java.lang.NullPointerException: null
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.stopLongTaskTimers(LongTaskTimingHandlerInterceptor.java:123)
	at org.springframework.boot.actuate.metrics.web.servlet.LongTaskTimingHandlerInterceptor.afterCompletion(LongTaskTimingHandlerInterceptor.java:79)
	at org.springframework.web.servlet.HandlerExecutionChain.triggerAfterCompletion(HandlerExecutionChain.java:179)
	at org.springframework.web.servlet.DispatcherServlet.triggerAfterCompletion(DispatcherServlet.java:1427)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:141)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:21:05,128 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: null
	at java.base/java.util.Objects.requireNonNull(Objects.java:221)
	at io.micrometer.core.instrument.ImmutableTag.<init>(ImmutableTag.java:35)
	at io.micrometer.core.instrument.Tag.of(Tag.java:29)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.method(WebMvcTags.java:74)
	at org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider.getTags(DefaultWebMvcTagsProvider.java:46)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.getTimer(WebMvcMetricsFilter.java:181)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.record(WebMvcMetricsFilter.java:143)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:120)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:21:05,132 ERROR org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Error processing request
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:412)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:21:05,133 WARN org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Exception while attempting to add an entry to the access log
java.lang.NullPointerException: null
	at org.apache.catalina.connector.CoyoteAdapter.log(CoyoteAdapter.java:490)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1598)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-12 19:24:54,063 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-30] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:24:54,069 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-30] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:24:54,070 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:24:54,088 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:24:54,094 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:24:54,098 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:24:54,102 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:24:54,105 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:24:54,106 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:24:54,108 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-30] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:24:54,317 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-30] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:24:54,318 INFO com.zaxxer.hikari.HikariDataSource [Thread-30] HikariPool-6 - Shutdown initiated...
2020-12-12 19:24:54,321 INFO com.zaxxer.hikari.HikariDataSource [Thread-30] HikariPool-6 - Shutdown completed.
2020-12-12 19:24:55,406 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:24:55,407 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:24:55,407 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:24:56,239 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:24:56,427 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 187ms. Found 10 JPA repository interfaces.
2020-12-12 19:24:56,715 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:24:56,793 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:24:56,794 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:24:56,795 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:24:56,796 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:24:56,977 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:24:56,982 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:24:56,983 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1558 ms
2020-12-12 19:24:57,058 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Starting...
2020-12-12 19:24:57,066 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-7 - Start completed.
2020-12-12 19:24:57,066 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:24:57,264 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:24:57,293 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:24:57,305 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:24:58,012 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:24:58,014 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:24:58,031 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:24:58,220 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:24:58,568 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@245bd2a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ba6b0c6, org.springframework.security.web.header.HeaderWriterFilter@640e755a, org.springframework.security.web.csrf.CsrfFilter@48c22197, org.springframework.security.web.authentication.logout.LogoutFilter@16500c90, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2f89e69a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@699f2285, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@69984e5a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13ac4789, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@41f5403, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ecff82a, org.springframework.security.web.session.SessionManagementFilter@6231fb8e, org.springframework.security.web.access.ExceptionTranslationFilter@750af9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@533c8b88]
2020-12-12 19:24:58,654 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:25:00,234 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:25:00,289 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:25:00,318 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:25:00,320 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 5.008 seconds (JVM running for 1201.905)
2020-12-12 19:25:00,327 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:25:00,328 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:25:15,483 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [Thread-35] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-12 19:25:15,487 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [Thread-35] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:25:15,488 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2020-12-12 19:25:15,496 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table diseases if exists
2020-12-12 19:25:15,498 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table owners if exists
2020-12-12 19:25:15,500 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table pets if exists
2020-12-12 19:25:15,502 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table researchers if exists
2020-12-12 19:25:15,505 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table specialties if exists
2020-12-12 19:25:15,506 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table types if exists
2020-12-12 19:25:15,508 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [Thread-35] HHH000478: Unsuccessful: 
    drop table users if exists
2020-12-12 19:25:15,742 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [Thread-35] Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: La base de datos ya esta cerrada (para des-habilitar el cerrado automatico durante el shutdown de la VM, agregue ";DB_CLOSE_ON_EXIT=FALSE" a la URL de conexión)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
2020-12-12 19:25:15,743 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-7 - Shutdown initiated...
2020-12-12 19:25:15,757 INFO com.zaxxer.hikari.HikariDataSource [Thread-35] HikariPool-7 - Shutdown completed.
2020-12-12 19:25:16,902 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Starting PetclinicApplication on DESKTOP-NTO3O0L with PID 18556 (C:\workspace\teaching\dp1\spring-petclinic\target\classes started by japar in C:\workspace\teaching\dp1\spring-petclinic)
2020-12-12 19:25:16,903 DEBUG org.springframework.boot.StartupInfoLogger [restartedMain] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2020-12-12 19:25:16,903 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2020-12-12 19:25:17,859 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-12-12 19:25:17,926 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 65ms. Found 10 JPA repository interfaces.
2020-12-12 19:25:18,134 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-12-12 19:25:18,208 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8080 (http)
2020-12-12 19:25:18,210 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["http-nio-8080"]
2020-12-12 19:25:18,211 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2020-12-12 19:25:18,211 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.30]
2020-12-12 19:25:18,536 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020-12-12 19:25:18,539 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2020-12-12 19:25:18,541 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1631 ms
2020-12-12 19:25:18,669 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Starting...
2020-12-12 19:25:18,675 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-8 - Start completed.
2020-12-12 19:25:18,677 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [restartedMain] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2020-12-12 19:25:18,956 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-12 19:25:18,985 INFO org.hibernate.dialect.Dialect [restartedMain] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-12-12 19:25:19,013 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [restartedMain] Envers integration enabled? : true
2020-12-12 19:25:19,695 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-12 19:25:19,696 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-12 19:25:19,707 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2020-12-12 19:25:19,799 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-12 19:25:20,367 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2fbd3aa3, org.springframework.security.web.context.SecurityContextPersistenceFilter@7a20bf60, org.springframework.security.web.header.HeaderWriterFilter@638baaae, org.springframework.security.web.csrf.CsrfFilter@149acdfb, org.springframework.security.web.authentication.logout.LogoutFilter@1845630e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4a789b5c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7cda11e4, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@5d35a23b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40eb6978, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e0b6511, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20386dd8, org.springframework.security.web.session.SessionManagementFilter@3897489c, org.springframework.security.web.access.ExceptionTranslationFilter@eb698e4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4017ace1]
2020-12-12 19:25:20,436 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-12 19:25:23,241 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 13 endpoint(s) beneath base path '/actuator'
2020-12-12 19:25:23,280 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["http-nio-8080"]
2020-12-12 19:25:23,289 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8080 (http) with context path ''
2020-12-12 19:25:23,291 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started PetclinicApplication in 6.479 seconds (JVM running for 1224.875)
2020-12-12 19:25:23,295 INFO org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener [restartedMain] Condition evaluation unchanged
2020-12-12 19:25:23,296 INFO org.springframework.samples.petclinic.PetclinicApplication [restartedMain] Awesomeness ahead!
2020-12-12 19:25:23,322 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-12 19:25:23,323 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2020-12-12 19:25:23,329 INFO org.springframework.web.servlet.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 6 ms
2021-12-07 10:20:43,894 INFO org.springframework.samples.petclinic.logging.examples.LoggingExample1Test [main] An INFO Message
2021-12-07 10:20:43,901 WARN org.springframework.samples.petclinic.logging.examples.LoggingExample1Test [main] A WARN Message
2021-12-07 10:20:43,902 ERROR org.springframework.samples.petclinic.logging.examples.LoggingExample1Test [main] An ERROR Message
2021-12-07 10:20:44,076 INFO org.hibernate.validator.internal.util.Version [main] HV000001: Hibernate Validator 6.0.18.Final
2021-12-07 10:20:44,718 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.service.OwnerServiceTests], using SpringBootContextLoader
2021-12-07 10:20:44,727 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.service.OwnerServiceTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:44,728 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.service.OwnerServiceTests]: OwnerServiceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:44,895 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.service.OwnerServiceTests
2021-12-07 10:20:44,898 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:44,925 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@44252e9b, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7f88c53, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@788a7567, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@62672ad5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@f5b81f4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4c020e58, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67887bf2, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@3ce2c454, org.springframework.test.context.event.EventPublishingTestExecutionListener@6f65b61d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@33c91567, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17baaf07, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3d5009c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7f478529, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@45ed58b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@465e9090]
2021-12-07 10:20:45,421 INFO org.springframework.boot.StartupInfoLogger [main] Starting OwnerServiceTests on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:45,422 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:45,424 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:45,896 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-07 10:20:46,027 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 117ms. Found 10 JPA repository interfaces.
2021-12-07 10:20:46,087 INFO org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor [main] Replacing 'dataSource' DataSource bean with embedded version
2021-12-07 10:20:46,522 INFO org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory [main] Starting embedded database: url='jdbc:h2:mem:72df6127-3e23-4548-80b9-3d195f3d0fba;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2021-12-07 10:20:47,086 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-07 10:20:47,238 INFO org.hibernate.Version [main] HHH000412: Hibernate Core {5.4.10.Final}
2021-12-07 10:20:47,508 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [main] HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-12-07 10:20:47,738 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-12-07 10:20:47,841 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [main] Envers integration enabled? : true
2021-12-07 10:20:49,602 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-07 10:20:49,611 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-07 10:20:50,479 INFO org.springframework.boot.StartupInfoLogger [main] Started OwnerServiceTests in 5.364 seconds (JVM running for 7.72)
2021-12-07 10:20:50,501 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@7d4d71b2, testMethod = shouldFindOwnersByLastName@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:50,837 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@7d4d71b2, testMethod = shouldFindOwnersByLastName@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:50,841 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@4b215276, testMethod = shouldUpdateOwner@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:50,916 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@4b215276, testMethod = shouldUpdateOwner@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:50,920 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@26c9d57f, testMethod = shouldInsertOwner@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:50,944 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@26c9d57f, testMethod = shouldInsertOwner@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:50,947 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@7610a7b, testMethod = shouldFindSingleOwnerWithPet@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:50,961 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@df8f037 testClass = OwnerServiceTests, testInstance = org.springframework.samples.petclinic.service.OwnerServiceTests@7610a7b, testMethod = shouldFindSingleOwnerWithPet@OwnerServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@71dc83a testClass = OwnerServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@500913fc key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:50,967 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.service.PetServiceTests], using SpringBootContextLoader
2021-12-07 10:20:50,969 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.service.PetServiceTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:50,970 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.service.PetServiceTests]: PetServiceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:50,976 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.service.PetServiceTests
2021-12-07 10:20:50,976 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:50,977 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@61b44cb4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@573e56d7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@292725c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1adc30fe, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59ce1efd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7ce373fd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d72feaf, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@1652683f, org.springframework.test.context.event.EventPublishingTestExecutionListener@3f42a5fe, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@58d94570, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@22a45f42, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2732d8b9, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@d75f4f4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f95d2ef, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1fcbd010]
2021-12-07 10:20:50,983 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@3bac06ee, testMethod = shouldAddNewVisitForPet@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,016 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@3bac06ee, testMethod = shouldAddNewVisitForPet@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,020 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@5f94b7c8, testMethod = shouldFindVisitsByPetId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,051 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@5f94b7c8, testMethod = shouldFindVisitsByPetId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,056 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@24acadae, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,088 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@24acadae, testMethod = shouldInsertPetIntoDatabaseAndGenerateId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,093 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@58884b98, testMethod = shouldUpdatePetName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,109 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@58884b98, testMethod = shouldUpdatePetName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,114 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@69880f85, testMethod = shouldFindAllPetTypes@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,126 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@69880f85, testMethod = shouldFindAllPetTypes@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,131 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@172ec40d, testMethod = shouldThrowExceptionUpdatingPetsWithTheSameName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,156 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@172ec40d, testMethod = shouldThrowExceptionUpdatingPetsWithTheSameName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,159 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@4e382bd2, testMethod = shouldThrowExceptionInsertingPetsWithTheSameName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,178 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@4e382bd2, testMethod = shouldThrowExceptionInsertingPetsWithTheSameName@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,181 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@28d9cafa, testMethod = shouldFindPetWithCorrectId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,190 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@7c440202 testClass = PetServiceTests, testInstance = org.springframework.samples.petclinic.service.PetServiceTests@28d9cafa, testMethod = shouldFindPetWithCorrectId@PetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5a89ea05 testClass = PetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@17fd9e79 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,192 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.service.VetServiceTests], using SpringBootContextLoader
2021-12-07 10:20:51,192 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.service.VetServiceTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:51,193 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.service.VetServiceTests]: VetServiceTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:51,195 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.service.VetServiceTests
2021-12-07 10:20:51,195 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:51,196 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@399c7b85, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4f6f40c5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2cc64ab6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@d7aed75, org.springframework.test.context.support.DirtiesContextTestExecutionListener@57e0ff0c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@623ce45d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7c318156, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@26facae0, org.springframework.test.context.event.EventPublishingTestExecutionListener@763249ac, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@73a9453b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3e24129, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73bf267f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@17a46e8d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2e1d61df, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3fe7963c]
2021-12-07 10:20:51,200 INFO org.springframework.test.context.transaction.TransactionContext [main] Began transaction (1) for test context [DefaultTestContext@44539920 testClass = VetServiceTests, testInstance = org.springframework.samples.petclinic.service.VetServiceTests@4786b1e0, testMethod = shouldFindVets@VetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7cc788aa testClass = VetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@55713b57 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@851fa2d]; rollback [true]
2021-12-07 10:20:51,219 INFO org.springframework.test.context.transaction.TransactionContext [main] Rolled back transaction for test: [DefaultTestContext@44539920 testClass = VetServiceTests, testInstance = org.springframework.samples.petclinic.service.VetServiceTests@4786b1e0, testMethod = shouldFindVets@VetServiceTests, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7cc788aa testClass = VetServiceTests, locations = '{}', classes = '{class org.springframework.samples.petclinic.PetclinicApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@55713b57 key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3db3668, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5620470a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@b21cbbf, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@40a76d3c, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@b3505f4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@39e91bda], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]
2021-12-07 10:20:51,225 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.web.OwnerControllerTests], using SpringBootContextLoader
2021-12-07 10:20:51,226 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.web.OwnerControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:51,226 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.web.OwnerControllerTests]: OwnerControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:51,251 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.web.OwnerControllerTests
2021-12-07 10:20:51,251 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:51,252 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2db2fe2f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@62a6638c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4d9d9f2b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@75a8d59d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4f510e81, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1ebabee4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f7f1edf, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@cc83090, org.springframework.test.context.event.EventPublishingTestExecutionListener@4b2a128e, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@acd891, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4762b7bd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@a634371, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@11469ed1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7748b438, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@25c52a33]
2021-12-07 10:20:51,303 INFO org.springframework.boot.StartupInfoLogger [main] Starting OwnerControllerTests on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:51,303 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:51,304 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:52,299 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-12-07 10:20:53,169 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: ffe20511-c4e5-40b2-ae97-5bcfc0065ef6

2021-12-07 10:20:53,395 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a938d3d, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b6a05e6, org.springframework.security.web.header.HeaderWriterFilter@75e72c38, org.springframework.security.web.csrf.CsrfFilter@413f45c4, org.springframework.security.web.authentication.logout.LogoutFilter@48794b69, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b0b43f7, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@56fab396, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1709eb8e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@72adc6d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6215bdc1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@607c728d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17f5a41c, org.springframework.security.web.session.SessionManagementFilter@534862f2, org.springframework.security.web.access.ExceptionTranslationFilter@68bacb6e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cec85b9]
2021-12-07 10:20:53,463 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:20:53,464 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:20:53,476 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 12 ms
2021-12-07 10:20:53,504 INFO org.springframework.boot.StartupInfoLogger [main] Started OwnerControllerTests in 2.239 seconds (JVM running for 10.745)
2021-12-07 10:20:53,750 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.web.PetControllerTests], using SpringBootContextLoader
2021-12-07 10:20:53,751 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.web.PetControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:53,751 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.web.PetControllerTests]: PetControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:53,753 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.web.PetControllerTests
2021-12-07 10:20:53,754 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:53,754 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@40b856b4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@669d8f40, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5061f4e8, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2ee881cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2ce77f53, org.springframework.test.context.transaction.TransactionalTestExecutionListener@268a1200, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7993748d, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@131f7c92, org.springframework.test.context.event.EventPublishingTestExecutionListener@4158445, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@72f98cd5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@102cb91b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@783fac60, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@50a0288e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6e01996b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1b9011d1]
2021-12-07 10:20:53,778 INFO org.springframework.boot.StartupInfoLogger [main] Starting PetControllerTests on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:53,778 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:53,779 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:54,178 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-12-07 10:20:54,620 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: e43ddb26-bcbc-4732-9f4b-d67baa74b47b

2021-12-07 10:20:54,692 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c9fd527, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e9c778d, org.springframework.security.web.header.HeaderWriterFilter@1795453e, org.springframework.security.web.csrf.CsrfFilter@5ee7b266, org.springframework.security.web.authentication.logout.LogoutFilter@4bbb70b4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@536bacf2, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4db84336, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1bc147de, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7c6a61fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6165581d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ce45dba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15c36468, org.springframework.security.web.session.SessionManagementFilter@4d0b98c8, org.springframework.security.web.access.ExceptionTranslationFilter@4c9064df, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11ad278]
2021-12-07 10:20:54,704 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:20:54,704 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:20:54,709 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 5 ms
2021-12-07 10:20:54,720 INFO org.springframework.boot.StartupInfoLogger [main] Started PetControllerTests in 0.963 seconds (JVM running for 11.96)
2021-12-07 10:20:54,828 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.web.security.PetControllerSecurityTest], using SpringBootContextLoader
2021-12-07 10:20:54,829 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.web.security.PetControllerSecurityTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:54,829 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.web.security.PetControllerSecurityTest]: PetControllerSecurityTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:54,843 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.web.security.PetControllerSecurityTest
2021-12-07 10:20:54,845 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:54,846 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@340e3bae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5cd1c963, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1c62eac5, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1e96bc0e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5b003739, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9c867eb, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f780d5, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@29aa2a49, org.springframework.test.context.event.EventPublishingTestExecutionListener@73c979ba, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@39f4bf17, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73b71d4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7f3bfb18, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@470759ec, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5b175a1c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7fe357b]
2021-12-07 10:20:54,875 INFO org.springframework.boot.StartupInfoLogger [main] Starting PetControllerSecurityTest on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:54,876 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:54,876 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:55,342 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-12-07 10:20:55,376 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 33ms. Found 10 JPA repository interfaces.
2021-12-07 10:20:55,539 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [main] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-12-07 10:20:55,863 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 0 (http)
2021-12-07 10:20:55,879 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-auto-1"]
2021-12-07 10:20:55,879 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-12-07 10:20:55,880 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.30]
2021-12-07 10:20:56,178 INFO org.apache.juli.logging.DirectJDKLog [main] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2021-12-07 10:20:56,187 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-12-07 10:20:56,188 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1309 ms
2021-12-07 10:20:56,362 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2021-12-07 10:20:56,388 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2021-12-07 10:20:56,395 INFO org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration [main] H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2021-12-07 10:20:56,846 INFO org.hibernate.jpa.internal.util.LogHelper [main] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-12-07 10:20:56,857 INFO org.hibernate.dialect.Dialect [main] HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-12-07 10:20:56,870 INFO org.hibernate.envers.boot.internal.EnversServiceImpl [main] Envers integration enabled? : true
2021-12-07 10:20:57,066 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [main] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-12-07 10:20:57,067 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-12-07 10:20:57,150 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-12-07 10:20:57,433 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a17b62d, org.springframework.security.web.context.SecurityContextPersistenceFilter@34e2969d, org.springframework.security.web.header.HeaderWriterFilter@575e9c08, org.springframework.security.web.csrf.CsrfFilter@7e06f80, org.springframework.security.web.authentication.logout.LogoutFilter@41c07f27, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7da84800, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@133b27a5, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@324d4900, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53242b64, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@703953d4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75973e62, org.springframework.security.web.session.SessionManagementFilter@30fa736d, org.springframework.security.web.access.ExceptionTranslationFilter@543662ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@393fc457]
2021-12-07 10:20:57,522 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-12-07 10:20:57,984 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 13 endpoint(s) beneath base path '/actuator'
2021-12-07 10:20:58,050 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-auto-1"]
2021-12-07 10:20:58,331 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 61549 (http) with context path ''
2021-12-07 10:20:58,332 INFO org.springframework.boot.StartupInfoLogger [main] Started PetControllerSecurityTest in 3.484 seconds (JVM running for 15.573)
2021-12-07 10:20:58,388 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:20:58,389 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:20:58,394 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 5 ms
2021-12-07 10:20:58,417 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:20:58,417 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:20:58,418 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2021-12-07 10:20:58,425 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2021-12-07 10:20:58,428 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-07 10:20:58,428 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2021-12-07 10:20:58,437 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table diseases if exists
2021-12-07 10:20:58,438 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table owners if exists
2021-12-07 10:20:58,439 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table pets if exists
2021-12-07 10:20:58,439 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table researchers if exists
2021-12-07 10:20:58,440 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table specialties if exists
2021-12-07 10:20:58,441 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table types if exists
2021-12-07 10:20:58,441 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [main] HHH000478: Unsuccessful: 
    drop table users if exists
2021-12-07 10:20:58,444 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2021-12-07 10:20:58,448 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2021-12-07 10:20:58,690 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.web.VetControllerTests], using SpringBootContextLoader
2021-12-07 10:20:58,691 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.web.VetControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:58,691 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.web.VetControllerTests]: VetControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:58,693 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.web.VetControllerTests
2021-12-07 10:20:58,693 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:58,694 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@131ffc4c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@42e34691, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@23528664, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5520e06d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@39b19b19, org.springframework.test.context.transaction.TransactionalTestExecutionListener@613e9570, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@56e84e95, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@419efad, org.springframework.test.context.event.EventPublishingTestExecutionListener@3145c564, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@24c55329, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@304d3dc2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7b62c8e1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@64935c0c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6a4117ac, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@333b840b]
2021-12-07 10:20:58,721 INFO org.springframework.boot.StartupInfoLogger [main] Starting VetControllerTests on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:58,721 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:58,722 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:58,964 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-12-07 10:20:59,279 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: 2e753e20-1763-4f84-9879-542903be3013

2021-12-07 10:20:59,339 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d3b207b, org.springframework.security.web.context.SecurityContextPersistenceFilter@735d7df9, org.springframework.security.web.header.HeaderWriterFilter@7eb7735b, org.springframework.security.web.csrf.CsrfFilter@504336e4, org.springframework.security.web.authentication.logout.LogoutFilter@68718366, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5706efa5, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@75b5f9f4, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@99026b2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1be65135, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ec1655e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b29f276, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@698b9be2, org.springframework.security.web.session.SessionManagementFilter@3a609847, org.springframework.security.web.access.ExceptionTranslationFilter@3818bf2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@406c8c72]
2021-12-07 10:20:59,350 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:20:59,350 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:20:59,351 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 1 ms
2021-12-07 10:20:59,359 INFO org.springframework.boot.StartupInfoLogger [main] Started VetControllerTests in 0.663 seconds (JVM running for 16.599)
2021-12-07 10:20:59,541 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.springframework.samples.petclinic.web.VisitControllerTests], using SpringBootContextLoader
2021-12-07 10:20:59,542 INFO org.springframework.test.context.support.AbstractContextLoader [main] Could not detect default resource locations for test class [org.springframework.samples.petclinic.web.VisitControllerTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2021-12-07 10:20:59,542 INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils [main] Could not detect default configuration classes for test class [org.springframework.samples.petclinic.web.VisitControllerTests]: VisitControllerTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2021-12-07 10:20:59,544 INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper [main] Found @SpringBootConfiguration org.springframework.samples.petclinic.PetclinicApplication for test class org.springframework.samples.petclinic.web.VisitControllerTests
2021-12-07 10:20:59,544 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener]
2021-12-07 10:20:59,545 INFO org.springframework.test.context.support.AbstractTestContextBootstrapper [main] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@516936ad, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6c5e929e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6974a2f7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4b57708, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c71e56d, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4235e1f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@488c2776, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@67ae0458, org.springframework.test.context.event.EventPublishingTestExecutionListener@74e7cf4d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@6a2aa468, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@433499cc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@542fd936, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1e78f959, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21ce171a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@46d30016]
2021-12-07 10:20:59,562 INFO org.springframework.boot.StartupInfoLogger [main] Starting VisitControllerTests on DESKTOP-TG5N5A9 with PID 1788 (started by japarejo in d:\workspace\teaching\21-22\DP1\spring-petclinic)
2021-12-07 10:20:59,563 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.2.4.RELEASE, Spring v5.2.3.RELEASE
2021-12-07 10:20:59,563 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-12-07 10:20:59,807 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-12-07 10:21:00,102 INFO org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration [main] 

Using generated security password: a722cb68-b6c7-4a05-a761-82cfdb65eae0

2021-12-07 10:21:00,160 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3bec3f22, org.springframework.security.web.context.SecurityContextPersistenceFilter@300ecbc9, org.springframework.security.web.header.HeaderWriterFilter@74f9ce18, org.springframework.security.web.csrf.CsrfFilter@4d14c3d, org.springframework.security.web.authentication.logout.LogoutFilter@41755eee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7e5384af, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@1a0fbc83, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@428a305a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@64295b5e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1870b02d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22432435, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@209ea258, org.springframework.security.web.session.SessionManagementFilter@3e30d896, org.springframework.security.web.access.ExceptionTranslationFilter@6e08cbde, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61a30792]
2021-12-07 10:21:00,173 INFO org.springframework.mock.web.MockServletContext [main] Initializing Spring TestDispatcherServlet ''
2021-12-07 10:21:00,174 INFO org.springframework.web.servlet.FrameworkServlet [main] Initializing Servlet ''
2021-12-07 10:21:00,179 INFO org.springframework.web.servlet.FrameworkServlet [main] Completed initialization in 5 ms
2021-12-07 10:21:00,189 INFO org.springframework.boot.StartupInfoLogger [main] Started VisitControllerTests in 0.641 seconds (JVM running for 17.429)
2021-12-07 10:21:00,245 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2021-12-07 10:21:00,244 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2021-12-07 10:21:00,245 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2021-12-07 10:21:00,245 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [SpringContextShutdownHook] Shutting down ExecutorService 'applicationTaskExecutor'
2021-12-07 10:21:00,247 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [SpringContextShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2021-12-07 10:21:00,248 INFO org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000477: Starting delayed evictData of schema as part of SessionFactory shut-down'
2021-12-07 10:21:00,266 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table diseases if exists
2021-12-07 10:21:00,295 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table owners if exists
2021-12-07 10:21:00,297 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table pets if exists
2021-12-07 10:21:00,297 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table researchers if exists
2021-12-07 10:21:00,298 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table specialties if exists
2021-12-07 10:21:00,299 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table types if exists
2021-12-07 10:21:00,299 ERROR org.hibernate.tool.schema.internal.SchemaDropperImpl$DelayedDropActionImpl [SpringContextShutdownHook] HHH000478: Unsuccessful: 
    drop table users if exists
